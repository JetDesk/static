{"version":3,"sources":["components/context/popup-context/index.js","components/context/popup-context/popup-provider.js","components/pages/layouts/auth/auth.js","services/auth-service.js","components/pages/layouts/signin/index.js","components/pages/layouts/signin/signin.js","components/pages/layouts/signup/index.js","components/pages/layouts/signup/signup.js","components/header/index.js","components/header/header.js","components/lazy-load/lazy-load-image.js","services/group-service.js","components/left-menu/index.js","components/left-menu/left-menu.js","components/popup-content/add-join/index.js","components/popup-content/add-join/add-join.js","components/popup-content/add-join-next/add-group-popup-content.js","components/popup-content/add-join-next/join-group-popup-content.js","services/user-service.js","components/popup-content/user-picture/index.js","components/popup-content/user-picture/user-picture.js","services/task-service.js","components/popup-content/new-task/new-task.js","components/popup-content/error/index.js","components/popup-content/error/error.js","components/popup-content/edit-task/edit-task.js","components/popup-content/homework/rate-homework.js","components/popup-content/new-file/new-file.js","components/popup-content/new-file/new-task-file.js","components/popup-content/leave-group/index.js","components/popup-content/leave-group/leave-group.js","components/popup-content/new-lesson/index.js","components/popup-content/new-lesson/new-lesson.js","components/popup-content/delete-lesson/delete-lesson.js","components/popup-content/group-picture/index.js","components/popup-content/group-picture/group-picture.js","components/popup-content/delete-member/delete-member.js","components/popup-content/member-info/member-info.js","components/popup/popup.js","components/popup/index.js","components/pages/layouts/default/layout.js","components/popup/new-popup.js","components/pages/layouts/default/index.js","components/pages/home/index.js","components/pages/home/home-page.js","components/pages/user/user-page.js","components/pages/user/index.js","components/pages/group/home-blocks/clock-block.js","components/pages/group/home-blocks/tasks-block.js","components/pages/group/home-blocks/rating-block.js","components/pages/group/home-blocks/files-block.js","components/pages/group/home-blocks/lessons-block.js","components/pages/group/home-blocks/chat-block.js","components/top-menu/index.js","components/top-menu/top-menu.js","components/mobile-menu/index.js","components/mobile-menu/mobile-menu.js","components/pages/group/group-page.js","components/pages/group/index.js","components/mobile-menu-task/index.js","components/mobile-menu-task/mobile-menu-task.js","components/pages/task/task-page.js","components/pages/task/index.js","components/pages/all-tasks/all-tasks-page.js","components/pages/all-tasks/index.js","components/pages/admin/group-settings-page.js","components/pages/admin/homework-page.js","components/pages/admin/manage-lessons.js","components/pages/join/join-class.js","components/pages/join/index.js","components/pages/admin/manage-members.js","components/pages/layouts/restore/restore.js","components/pages/layouts/restore/pass.js","components/app/index.js","components/app/app.js","index.js"],"names":["PopUpContext","React","createContext","Component","AuthService","_apiBase","xhr","XMLHttpRequest","getResource","url","a","fetch","res","ok","Error","status","json","sendFormRequest","opts","endpointUrl","open","setRequestHeader","postData","send","JSON","stringify","Promise","resolve","reject","onreadystatechange","e","readyState","console","log","responseText","parse","getUserData","token","SignIn","state","userPass","showingButton","message","onPasswordFill","setState","target","value","onPasswordCheck","onRegFormSubmit","preventDefault","formData","i","length","name","then","onLoginFormSubmit","undefined","localStorage","setItem","userData","props","logIn","this","messageStyle","display","className","src","alt","href","style","id","onSubmit","type","placeholder","required","onChange","SignUp","buttonStyle","pointerEvents","background","Header","currentMenuGroup","getItem","userIcon","serverUrl","openHideMenu","currentGroupLink","onClick","to","styled","div","loadingAnimation","keyframes","GroupService","img","newGroup","getGroupData","link","params","encodeURIComponent","getGroupMembersAdmin","getGroupDataAdmin","joinGroup","leaveGroup","getFollowing","getRole","editGroup","uploadFile","formEl","FormData","onerror","alert","getGroupRating","hideGroupRating","showGroupRating","newFile","getGroupFiles","newLesson","getLessons","deleteLesson","lessonId","setTeacher","userId","setTeacherToStudent","deleteGroupMember","getMemberInfo","getGroupChat","page","newMessage","LeftMenu","UserGroups","handlePopUpContent","menuOpened","onlyHideMenu","ShowGroups","map","group","activeclassname","key","picture","title","data","split","slice","join","match","substring","generateGroupShortName","school_name","smallPopUp","AddJoin","Fragment","changePopUpState","AddGroupPopupContent","onGroupCreate","window","location","firstInput","focus","ref","input","autoComplete","JoinGroupPopupContent","onGroupJoin","updateErrorMessage","UserService","getUserLimit","editUserProfile","changeUserPassword","UserPicture","onPictureUpload","document","getElementById","reload","encType","accept","newTask","editTask","getTasks","getTasksWithMyHomework","getSingleTask","taskLink","getTaskAdminRole","getAdminRole","groupLink","newHomework","getSingleHomework","getAllHomework","getSingleHomeworkAdmin","homeworkLink","rateHomeworkAdmin","commentHomeworkAdmin","homework","teacherComment","getTaskFiles","deleteTaskFileAdmin","fileId","getMyFiles","deleteMyTaskFile","getStudentTaskFiles","NewTask","TaskService","taskColor","updateNewTaskColor","color","onTaskCreate","today","Date","toISOString","min","htmlFor","errorMessage","EditTask","TaskInfo","onTaskEdit","defaultValue","topic","deadline","max_mark","comment","group_link","task_link","RateHomework","onHomeworkRate","argsData","max","homework_link","NewFile","onNewFile","NewTaskFile","LeaveGroup","leaveGroupAction","GroupLink","NewLesson","checkboxIsChecked","handleCheckboxChange","checked","onEventCreate","DeleteLesson","deleteLessonAction","eventId","GroupPicture","DeleteMember","deleteMemberAction","UserId","MemberInfo","showRoleMenu","num","addEventListener","checkForClick","event","contains","removeEventListener","memberId","userRole","totalUserMark","PopUp","contentJson","addJoin","context","addGroupPopupContent","joinGroupPopupContent","userPicture","rateHomework","newTaskFile","groupPicture","deleteMember","memberInfo","error","Consumer","contextProps","popUpContent","contextType","DefaultLayout","handleTouchMove","Children","children","child","idx","showingPopUp","HomePage","userName","replace","UserPage","currentUserUsage","currentUserPlan","onProfileEdit","onPasswordChange","clear","userLimit","logOut","userEmail","history","back","ClockBlock","Clock","updateClock","date","time","getHours","getMinutes","intervalClock","setInterval","clearInterval","TasksBlock","TasksList","componentDidUpdate","reformatDate","AllTasks","task","substr","RatingBlock","RatingList","showingRatingReloadInfo","showingRating","RatingListBlock","userRating","index","FilesBlock","FilesList","FilesListBlock","fileInfo","file_name","rel","file_link","file_comment","LessonsBlock","LessonsList","showingEventBlock","selectedEvent","hideEventInfo","handleDateClick","arg","handleEventClick","setClipboard","tempInput","createElement","body","appendChild","select","execCommand","removeChild","eventsArr","push","daysOfWeek","startTime","description","extendedProps","lesson_url","EventInfoBlock","info","eventInfo","_def","dateObj","_instance","range","start","dateOffset","getTimezoneOffset","toString","setMinutes","day","getDay","month","getMonth","dayName","hours","minutes","lessonsActionsStyle","plugins","dayGridPlugin","listPlugin","interactionPlugin","dateClick","eventClick","timezone","ignoreTimezone","initialView","weekends","events","ChatBlock","ChatMessages","CurrentChatPage","TotalChatPages","refreshChat","UserInputText","getChatData","sendMessage","workWithMessage","msg","youtube_parser","html","prettyURL","loadMoreMessages","parseInt","handleInputChange","ChatMessagesBlock","msgData","array","user_id","LoadMoreMessagesButton","TopMenu","isAdmin","MobileMenu","scrollWithOffset","el","offset","elementPosition","offsetTop","scroll","top","left","behavior","smooth","GroupPage","GroupInfo","UserRole","showingGroupMenu","showHideGroupMenu","roleRes","RatingAdminAction","rating","MobileMenuTask","isTeacher","TaskPage","UserHomework","TaskFiles","MyFiles","AllHomeWorks","onNewHomework","resRole","resFiles","homeworkRes","myFilesRes","prevProps","prevState","userElements","adminElements","StatusBlock","TaskNewFiles","TaskFilesBlock","file","MyTaskNewFiles","MyTasksFilesBlock","AllHomeWorksBlock","hwork","user","teacher_mark","teacher_message","teachers","teacherMessageSender","teacher_comment","teacherCommentSender","UnDoneTasks","taskRes","unDone","filter","AllTasksBlock","TaskStatusOptions","created_date","TaskStatusOptionsMobile","ErrorScreen","AllTasksPage","GroupSettingsPage","onGroupEdit","copyToClipboard","groupLinkField","code","readonly","HomeWorkPage","HomeworkFiles","attachTeacherMessage","homeworkFilesRes","senderIcon","senderName","StudentTaskFiles","HomeworkFilesBlock","ManageLessonsPage","lessonsRes","days","AllLessonsBlock","recurring","eventDate","days_of_week","start_time","JoinClassPage","ManageMembersPage","MembersList","TotalMembers","CurrentRoleMenu","membersRes","AllMembersBlock","member","role","Restore","sMessage","onRestoreFormSubmit","sMessageStyle","Password","userToken","onNewPassFormSubmit","setTimeout","parsed","queryString","search","t","App","isLogedIn","overflow","querySelector","touchAction","dateStr","dArr","updateCurrentGroupLink","PopUpProviderProps","RouteWrapper","component","Layout","layout","rest","render","Provider","path","exact","UserProfile","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6b004ad9.chunk.js","sourcesContent":["// import {\n//     PopUpProvider,\n//     PopUpConsumer\n// } from './popup-provider';\n\n// export {\n//     PopUpProvider,\n//     PopUpConsumer\n// }\n\nimport PopUpContext from './popup-provider';\n\n// const PopUpProvider = PopUpContext.Provider;\n// const PopUpConsumer = PopUpContext.Consumer;\n\n// export default {\n//     PopUpContext,\n//     PopUpProvider,\n//     PopUpConsumer\n// }\n\nexport default PopUpContext;","import React from 'react';\n\n// const {\n//     Provider :  PopUpProvider,\n//     Consumer : PopUpConsumer\n// } = React.createContext();\n\nconst PopUpContext = React.createContext();\n\nexport default PopUpContext;\n\n// export {\n//     PopUpProvider,\n//     PopUpConsumer\n// }","import React, { Component } from 'react';\n\nimport './auth.css';\n\n//UserPage\nexport default class AuthLayout extends Component {\n\n    render() {\n        return (\n            <div className=\"auth\">\n                <div className=\"header\">\n                    <img className=\"logo\" src=\"/assets/svg/logo.svg\" alt=\"JetDesk\" />\n                    <a href=\"https://jetdesk.app/\">\n                        <span>JetDesk</span>\n                    </a>\n                </div>\n                    {\n                        React.Children.map(this.props.children, (child, idx) => {\n                            return child;\n                        })\n                    }\n            </div>\n        );\n    }\n}","export default class AuthService {\n\n    // _apiBase = 'http://localhost:5000/api';\n    _apiBase = 'https://api.jetdesk.app/api';\n\n    xhr = new XMLHttpRequest();\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    };\n\n    // getAllPeople = async () => {\n    //     const res = await this.getResource(`/people/`);\n    //     return res.results\n    //         .map(this._transformPerson)\n    //         .slice(0, 5);\n    // };\n\n\n    sendFormRequest = (opts, endpointUrl) => {\n        const { xhr } = this;\n        let url = this._apiBase + endpointUrl;\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getUserData = (token) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/auth/user\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        // xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send();\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n}\n","import SignIn from './signin';\n\nexport default SignIn;","import React, { Component } from 'react';\nimport '../auth/auth.css';\n\nimport AuthService from '../../../../services/auth-service';\n\nclass SignIn extends Component {\n\n    state = {\n        AuthService: new AuthService(),\n        userPass: '',\n        showingButton: false,\n        message: null\n    };\n\n    onPasswordFill = (e) => {\n        this.setState({\n            userPass: e.target.value\n        });\n    }\n\n    onPasswordCheck = (e) => {\n        if (e.target.value === this.state.userPass) {\n            this.setState({\n                showingButton: true\n            });\n        }\n    }\n\n    onRegFormSubmit = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        this.state.AuthService.sendFormRequest(formData, '/auth/register').then(\n            res => {\n                this.setState({\n                    message: res[\"message\"]\n                });\n            }\n        );\n    }\n\n    onLoginFormSubmit = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n        this.state.AuthService.sendFormRequest(formData, '/auth/login').then(\n            res => {\n                if (res[\"response\"][\"message\"] !== undefined) {\n                    this.setState({\n                        message: res[\"response\"][\"message\"]\n                    });\n                } else {\n                    localStorage.setItem('token', res[\"response\"][\"token\"]);\n                    this.state.AuthService.getUserData(res[\"response\"][\"token\"]).then(\n                        userData => {\n                            localStorage.setItem('user', JSON.stringify(userData));\n                            this.props.logIn();\n                        });\n                }\n            }\n        );\n    }\n\n    render() {\n        const { showingButton, message } = this.state;\n\n        const buttonStyle = {\n            display: showingButton ? 'block' : 'none'\n        }\n\n        const messageStyle = {\n            display: message ? 'flex' : 'none'\n        }\n\n        return (\n            <div className=\"auth\">\n                <div className=\"header\">\n                    <img className=\"logo\" src=\"/assets/svg/logo.svg\" alt=\"JetDesk\" />\n                    <a href=\"https://jetdesk.app/\">\n                        <span>JetDesk</span>\n                    </a>\n                </div>\n                <div style={messageStyle} className=\"message\">{message}</div>\n                <div className=\"page-content\">\n                    <form id=\"login\" onSubmit={this.onLoginFormSubmit}>\n                        <h1>Sign in</h1>\n                        <div className=\"input_block_section\">\n                            <span>Email</span>\n                            <input type=\"email\" name=\"email\" id=\"emailL\" placeholder=\"Enter your email here\" required />\n                        </div>\n                        <div className=\"input_block_section\">\n                            <span>Password</span>\n                            <input type=\"password\" onChange={this.onPasswordFill} name=\"password\" id=\"passL\" placeholder=\"Enter your password here\" required />\n                        </div>\n                        <a href=\"/restore\" className=\"link\">Forgot your password?</a>\n                        <div className=\"actions absolute-on-mobile\">\n                            <button type=\"submit\">Sign in</button>\n                            <a href=\"/signup\">I don't have an account</a>\n                        </div>\n                    </form>\n                    <img className=\"illustration\" src=\"/assets/illustration/enter.svg\" alt=\"Door\" />\n                </div>\n            </div> \n        );\n    }\n}\n\nexport default SignIn; ","import SignUp from './signup';\n\nexport default SignUp;\n\n","import React, { Component } from 'react';\nimport '../auth/auth.css';\n\nimport AuthService from '../../../../services/auth-service';\n\nclass SignUp extends Component {\n\n    state = {\n        AuthService: new AuthService(),\n        userPass: '',\n        showingButton: false,\n        message: null\n    };\n\n    onPasswordFill = (e) => {\n        this.setState({\n            userPass: e.target.value\n        });\n    }\n\n    onPasswordCheck = (e) => {\n        if (e.target.value === this.state.userPass) {\n            this.setState({\n                showingButton: true\n            });\n        }\n    }\n\n    onRegFormSubmit = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        this.state.AuthService.sendFormRequest(formData, '/auth/register').then(\n            res => {\n                console.log(res);\n                if (res[\"code\"] !== undefined) {\n                    this.setState({\n                        message: res[\"message\"]\n                    });\n                } else {\n                    localStorage.setItem('token', res[\"token\"]);\n                    this.state.AuthService.getUserData(res[\"token\"]).then(\n                        userData => {\n                            localStorage.setItem('user', JSON.stringify(userData));\n                            this.props.logIn();\n                        });\n                }\n\n            }\n        );\n    }\n\n    onLoginFormSubmit = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n        this.state.AuthService.sendFormRequest(formData, '/auth/login').then(\n            res => {\n                if (res[\"response\"][\"message\"] !== undefined) {\n                    this.setState({\n                        message: res[\"response\"][\"message\"]\n                    });\n                } else {\n                    localStorage.setItem('token', res[\"response\"][\"token\"]);\n                    this.state.AuthService.getUserData(res[\"response\"][\"token\"]).then(\n                        userData => {\n                            localStorage.setItem('user', JSON.stringify(userData));\n                            this.props.logIn();\n                        });\n                }\n            }\n        );\n    }\n\n    render() {\n        const { showingButton, message } = this.state;\n\n        const buttonStyle = {\n            // display: showingButton ? 'inline-block' : 'none',\n            pointerEvents: showingButton ? 'auto' : 'none',\n            background: showingButton ? 'linear-gradient(45deg, #4937E8 0%, #2A82E9 100%), #C4C4C4' : '#A5A5A5'\n        }\n\n        const messageStyle = {\n            display: message ? 'flex' : 'none'\n        }\n\n        return (\n            <div className=\"auth\">\n                <div className=\"header\">\n                    <img className=\"logo\" src=\"/assets/svg/logo.svg\" alt=\"JetDesk\" />\n                    <a href=\"https://jetdesk.app/\">\n                        <span>JetDesk</span>\n                    </a>\n                </div>\n                <div style={messageStyle} className=\"message\">{message}</div>\n                <div className=\"page-content\">\n                    <form id=\"registration\" onSubmit={this.onRegFormSubmit}>\n                        <h1>Sign up</h1>\n                        <div className=\"input_block_section\">\n                            <span>Email</span>\n                            <input type=\"email\" name=\"email\" id=\"emailR\" placeholder=\"Your email\" required />\n                        </div>\n                        <div className=\"input_block_section\">\n                            <span>Name and surname</span>\n                            <input type=\"text\" name=\"name\" id=\"nameR\" placeholder=\"Enter your name here\" required />\n                        </div>\n                        <div className=\"input_block_section\">\n                            <span>Pick a password</span>\n                            <input type=\"password\" onChange={this.onPasswordFill} name=\"password\" id=\"passR\" placeholder=\"Enter your password here\" required />\n                        </div>\n                        <div className=\"input_block_section\">\n                            <span>Repeat password</span>\n                            <input type=\"password\" onChange={this.onPasswordCheck} name=\"password2\" id=\"confirmpassR\" placeholder=\"Repeat your password here\" required />\n                        </div>\n                        {/* <div id=\"reCaptcha\"></div> */}\n                        <div className=\"actions\">\n                            <button type=\"submit\" className=\"reg\" id=\"createAccount\" style={buttonStyle}>Sign up</button>\n                            <a href=\"/signin\">I already have an account</a>\n                        </div>\n                    </form>\n                    {/* <script src=\"https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit\" async defer></script> */}\n                    <img className=\"illustration\" src=\"/assets/illustration/enter.svg\" alt=\"Door\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SignUp; ","import Header from './header';\n\nexport default Header;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css';\n\nclass Header extends Component {\n\n    state = {\n        currentMenuGroup: null\n    }\n\n    render() {\n        let userData = localStorage.getItem(\"user\");\n        userData = JSON.parse(userData);\n        // console.log(userData);\n        const { serverUrl } = this.props;\n        const userIcon = serverUrl + userData[\"response\"][0][\"picture\"];\n\n        const { openHideMenu, currentGroupLink } = this.props;\n\n        return (\n            <div className=\"header\">\n                <div className=\"mobile-menu-icon\" onClick={openHideMenu}>\n                    <img src=\"/assets/svg/mobile-menu.svg\" alt=\"Menu\" />\n                </div>\n                <Link to=\"/\">\n                    <img className=\"logo\" src=\"/assets/svg/logo.svg\" alt=\"JetDesk\" />\n                </Link>\n                <Link className=\"mobile-logo\" to=\"/\">\n                    <img className=\"logo-mobile-icon\" src=\"/assets/svg/logo.svg\" alt=\"JetDesk\" />\n                    <span>JetDesk</span>\n                </Link>\n\n                <div className=\"header-right-side\">\n                    {/* {currentGroupLink  ? (\n                        <div className=\"top-menu\">\n                            <Link to={\"/class/\" + currentGroupLink}><span>Main</span></Link>\n                            <Link to={\"/tasks/\" + currentGroupLink}><span>Tasks</span></Link>\n                        </div>\n                    ) : null} */}\n\n                    <Link to=\"/profile/\">\n                        <div className=\"user-icon\">\n                            <img src={userIcon} alt=\"User\" />\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Header;","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport LazyLoad from \"react-lazyload\";\n\nconst ImageWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst loadingAnimation = keyframes`\n  0% {\n    background-color: #fff;\n  }\n  50% {\n    background-color: #ccc;\n  }\n  100% {\n    background-color: #fff;\n  }\n`;\n\nconst Placeholder = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  animation: ${loadingAnimation} 1s infinite;\n  border-radius: 50%;\n`;\n\nconst StyledImage = styled.img`\n  position: absolute;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst LazyImage = ({ src, alt }) => {\n  const refPlaceholder = React.useRef();\n\n  const removePlaceholder = () => {\n    refPlaceholder.current.remove();\n  };\n\n  return (\n    <ImageWrapper>\n      <Placeholder ref={refPlaceholder} />\n      <LazyLoad>\n        <StyledImage\n          onLoad={removePlaceholder}\n          onError={removePlaceholder}\n          src={src}\n          alt={alt}\n        />\n      </LazyLoad>\n    </ImageWrapper>\n  );\n};\n\nLazyImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired\n};\n\nexport default LazyImage;","export default class GroupService {\n\n    // _apiBase = 'http://localhost:5000/api';\n    _apiBase = 'https://api.jetdesk.app/api';\n\n    xhr = new XMLHttpRequest();\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    };\n\n    // getAllPeople = async () => {\n    //     const res = await this.getResource(`/people/`);\n    //     return res.results\n    //         .map(this._transformPerson)\n    //         .slice(0, 5);\n    // };\n\n\n    newGroup = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/new\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getGroupData = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/data\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getGroupMembersAdmin = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/members\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getGroupDataAdmin = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/data-admin\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    joinGroup = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/join\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n\n    leaveGroup = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/leave\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getFollowing = () => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/my-following\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        xhr.send();\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getRole = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/my-role\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    editGroup = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/edit\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    };\n\n\n    // uploadFile = (token, link, formEl) => {\n    //     const { xhr } = this;\n    //     let url = this._apiBase + \"/group/logo-upload\";\n    //     xhr.open(\"POST\", url);\n    //     xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n    //     // xhr.setRequestHeader(\"Content-Type\",\"multipart/form-data\");\n\n    //     let formData = new FormData(formEl);\n\n    //     xhr.send(formData, link);\n\n    //     return new Promise((resolve, reject) => {\n    //         xhr.onreadystatechange = (e) => {\n    //             if (xhr.readyState === 4) {\n    //                 resolve(JSON.parse(xhr.responseText));\n    //             }\n    //         }\n    //     });\n    // }\n\n    uploadFile = (token, link, formEl) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/logo-upload\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n        // xhr.setRequestHeader(\"Content-Type\",\"multipart/form-data\");\n\n        let formData = new FormData(formEl);\n\n        xhr.send(formData, link);\n\n        xhr.onreadystatechange = (e) => { \n            if (xhr.readyState === 4) {\n                console.log(xhr.responseText);\n                // window.location.reload();\n                // console.log(JSON.parse(xhr.responseText));\n            }\n        }\n\n        xhr.onerror = (e) => {\n            // alert(xhr.responseText); \n            alert(\"error\");\n        }\n    }\n\n\n    //Rating\n    getGroupRating = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/get-rating\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    hideGroupRating = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/hide-rating\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    showGroupRating = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/show-rating\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    //attachments\n\n    newFile = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/new-file\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getGroupFiles = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/group-files\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    newLesson = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/new-lesson\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getLessons = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/lessons\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    deleteLesson = (link, lessonId) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/delete-lesson\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link) + '&lessonId=' + encodeURIComponent(lessonId);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    //Members\n\n    setTeacher = (link, userId) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/set-teacher\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link) + '&userId=' + encodeURIComponent(userId);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    setTeacherToStudent = (link, userId) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/set-teacher-to-student\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link) + '&userId=' + encodeURIComponent(userId);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    deleteGroupMember = (link, userId) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/remove-member\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link) + '&userId=' + encodeURIComponent(userId);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getMemberInfo = (link, userId) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/member-info\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link) + '&userId=' + encodeURIComponent(userId);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n\n    //Chat\n\n    // getGroupChat = (link) => {\n    //     const { xhr } = this;\n    //     let url = this._apiBase + \"/group/chat\";\n    //     xhr.open(\"POST\", url);\n    //     xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n    //     xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n    //     let params = 'link=' + encodeURIComponent(link);\n    //     xhr.send(params);\n    //     return new Promise((resolve, reject) => {\n    //         xhr.onreadystatechange = (e) => {\n    //             if (xhr.readyState === 4) {\n    //                 // console.log(xhr.responseText);\n    //                 resolve(JSON.parse(xhr.responseText));\n    //             }\n    //         }\n    //     });\n    // }\n\n    getGroupChat = (link, page) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/chat\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link) + '&page=' + encodeURIComponent(page);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n\n    newMessage = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/group/new-message\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n\n}\n","import LeftMenu from './left-menu';\n\nexport default LeftMenu;","import React, { Component } from 'react';\nimport './left-menu.css';\n\n// import { BrowserRouter, NavLink, Nav, Link } from 'react-router-dom';\nimport { NavLink, Link } from 'react-router-dom';\n\nimport LazyImage from \"../../components/lazy-load/lazy-load-image\";\n\nimport GroupService from '../../services/group-service';\n\nclass LeftMenu extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n        UserGroups: null,\n        // menuOpened: false,\n    }\n\n    componentDidMount() {\n        // console.log(\"I did mount\")\n        this.state.GroupService.getFollowing().then(\n            res => {\n                console.log(res);\n                this.setState(\n                    {\n                        UserGroups: res[\"response\"]\n                    });\n            });\n    }\n\n\n    // onlyHideMenu = () => {\n    //     this.setState({\n    //         menuOpened: false\n    //     });\n    // }\n\n    render() {\n        const { handlePopUpContent, menuOpened, openHideMenu, onlyHideMenu, serverUrl } = this.props;\n\n        const { UserGroups } = this.state;\n\n        //https://jsfiddle.net/0ky72bvh/\n\n        const generateGroupShortName = (data) => {\n            let name;\n            if (data.split(' ').length >= 2) {\n                let twoWords = data.split(' ').slice(0, 2).join(' ')\n                let matches = twoWords.match(/\\b(\\w)/g);\n                let acronym = matches.join('');\n                name = acronym.substring(0, 2);\n            } else {\n                name = data.substring(0, 2);\n            }\n            return name;\n        }\n\n      \n\n        const ShowGroups = () => UserGroups.map((group) =>\n            <NavLink activeclassname='active' to={\"/class/\" + group.link} onClick={onlyHideMenu} className=\"leftmenu_link\" key={group.link}>\n                <div className=\"menu_circle\">\n                    {group.picture !== \"data/uploads/images/default/group.png\" ? <img src={serverUrl + group.picture} title={group.name} alt={group.name} /> : generateGroupShortName(group.name)}\n                    {/* {group.picture !== \"data/uploads/images/default/group.png\" ?  <LazyImage key={\"img\" + group.name} src={serverUrl + group.picture} alt={group.name} /> : generateGroupShortName(group.name)} */}\n                </div>\n                <div className=\"full_class_info\">\n                    <p>{group.name}</p>\n                    <span>{group.school_name}</span>\n                </div>\n            </NavLink>\n        );\n\n        return (\n            <div className={menuOpened ? 'leftmenu opened' : 'leftmenu'}>\n                <img className=\"menu\" onClick={openHideMenu} src=\"/assets/svg/pc-menu.svg\" alt=\"Menu\"></img>\n                <div className=\"leftmenu_top_line\">\n                    <div className=\"menu_logo_block\">\n                        <Link to=\"/\">\n                            <img className=\"menu_logo\" src=\"/assets/svg/logo-white.svg\" alt=\"Logo\"></img>\n                        </Link>\n                        <div className=\"menu_logo_text\">JetDesk</div>\n                    </div>\n                    <img className=\"menu_close\" onClick={openHideMenu} src=\"/assets/svg/menu-close-new.svg\" alt=\"Close Menu\"></img>\n                </div>\n                <div className=\"groups\">\n                    {/* <BrowserRouter>\n                <Nav> */}\n                    {(UserGroups ? <ShowGroups /> : null)}\n                    {/* </Nav>\n                </BrowserRouter> */}\n                </div>\n                <div className=\"leftmenu_bottom\" onClick={() => handlePopUpContent(\"addJoin\")}>\n                    <img className=\"plus\" src=\"/assets/svg/plus.svg\" alt=\"Plus\"></img>\n                </div>\n                <div className=\"leftmenu_bottom_opened\">\n                    <div className=\"leftmenu_bottom_opened_text\">\n                        <p>Join or create a Class</p>\n                    </div>\n                    {/* <div className=\"leftmenu_plus_square\" onClick={() => handlePopUpContent(\"addJoin\")}> */}\n                    <div className=\"leftmenu_plus_square\" onClick={() => handlePopUpContent(\"addJoin\", { smallPopUp: true })}>\n                        <img className=\"plus\" src=\"/assets/svg/plus.svg\" alt=\"Plus\"></img>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LeftMenu;","import AddJoin from './add-join';\n\nexport default AddJoin;","import React, { Component } from \"react\";\n\nexport default class AddJoin extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"side pc-only\">\n                    {/* <div className=\"circle\"></div> */}\n                    <img className=\"popup-illustration\" src=\"/assets/illustration/create.svg\" alt=\"Create\" />\n                    <h2>Create a Group</h2>\n                    <p>Create your own group, teach and take students to the next level</p>\n                    <button className=\"main\" onClick={() => this.props.handlePopUpContent(\"addGroupPopupContent\")}>Create a group</button>\n                </div>\n                <div className=\"side pc-only\">\n                    {/* <div className=\"circle\"></div> */}\n                    <img className=\"popup-illustration\" src=\"/assets/illustration/join.svg\" alt=\"Join\" />\n                    <h2>Join a Group</h2>\n                    <p>Become a member of the group and start learning effectively and achieve results quickly</p>\n                    <button className=\"main\" onClick={() => this.props.handlePopUpContent(\"joinGroupPopupContent\")}>Join a group</button>\n                </div>\n\n                <div className=\"mobile-block create-join-class-popup\">\n                    <div className=\"popup_form\">\n                        <h4>Create or join<br /> new group</h4>\n                        <div className=\"form_action small-margin\">\n                            <div className=\"cancel\" onClick={this.props.changePopUpState}>Cancel</div>\n                            <br />\n                            <button className=\"main\" onClick={() => this.props.handlePopUpContent(\"addGroupPopupContent\")}>Create a group</button>\n                            <button className=\"main space\" onClick={() => this.props.handlePopUpContent(\"joinGroupPopupContent\")}>Join a group</button>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport GroupService from '../../../services/group-service';\n\nexport default class AddGroupPopupContent extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n    }\n\n    componentDidMount() {\n        this.firstInput.focus();\n    }\n\n\n    onGroupCreate = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        this.state.GroupService.newGroup(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    window.location = \"/class/\" + res[\"response\"][\"link\"];\n                } else {\n                    alert(res[\"response\"][\"message\"]);\n                }\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"popup_form\">\n                <h4>Create a class</h4>\n                <form onSubmit={this.onGroupCreate}>\n                    <div className=\"form_elements\">\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" ref={(input) => { this.firstInput = input; }} name=\"name\" placeholder=\"Group name (ex.: Math class)\" autoComplete=\"off\" required />\n                            <span className=\"label\">Group name</span>\n                        </div>\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" name=\"schoolName\" placeholder=\"(Could be your or a personal brand)\" required />\n                            <span className=\"label\">School name</span>\n                        </div>\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" name=\"code\" placeholder=\"Ex.: MySecretPass123\" autoComplete=\"off\" />\n                            <span className=\"label\">(Leave empty if you'd like your group to be open to anyone).</span>\n                            <span className=\"label\">Group invitation pass</span>\n                        </div>\n                    </div>\n                    <div className=\"form_action\">\n                        <div className=\"cancel\" onClick={this.props.changePopUpState}>Cancel</div>\n                        <button className=\"main\" type=\"submit\">Create</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\n\nimport GroupService from '../../../services/group-service';\n\nexport default class JoinGroupPopupContent extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n    }\n\n    onGroupJoin = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        this.state.GroupService.joinGroup(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    window.location = \"/class/\" + res[\"response\"][\"link\"];\n                } else {\n                    // alert(res[\"response\"][\"message\"]);\n                    this.props.updateErrorMessage(res[\"response\"][\"message\"]);\n                    this.props.handlePopUpContent(\"error\");\n                }\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"popup_form\">\n                <h4>Join a class</h4>\n                <form onSubmit={this.onGroupJoin}>\n                    <div className=\"form_elements\">\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" name=\"link\" placeholder=\"Enter group ID\" autoComplete=\"off\" required />\n                            <span className=\"label\">Group ID</span>\n                        </div>\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" name=\"code\" placeholder=\"Enter invitation pass\" autoComplete=\"off\" />\n                            <span className=\"label\">Invitation pass (if required)</span>\n                        </div>\n                        {/* <div className=\"form_input_section\">\n                        <input type=\"text\" name=\"schoolName\" placeholder=\"(Could be your or a personal brand)\" required/>\n                        <span className=\"label\">School name</span>\n                    </div> */}\n                    </div>\n                    <div className=\"form_action\">\n                        <div className=\"cancel\" onClick={this.props.changePopUpState}>Cancel</div>\n                        <button className=\"main\" type=\"submit\">Join</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}","export default class UserService {\n\n    // _apiBase = 'http://localhost:5000/api';\n    _apiBase = 'https://api.jetdesk.app/api';\n\n    xhr = new XMLHttpRequest();\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    };\n\n    // getAllPeople = async () => {\n    //     const res = await this.getResource(`/people/`);\n    //     return res.results\n    //         .map(this._transformPerson)\n    //         .slice(0, 5);\n    // };\n\n\n    uploadFile = (token, formEl) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/user/upload\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n        // xhr.setRequestHeader(\"Content-Type\",\"multipart/form-data\");\n\n        let formData = new FormData(formEl);\n        xhr.send(formData);\n\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n\n            xhr.onerror = (e) => {\n                // alert(xhr.responseText); \n                alert(\"error\");\n            }\n        });\n    }\n\n    getUserData = (token) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/user/data\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n        xhr.send();\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getUserLimit = (token) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/user/limit\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n        xhr.send();\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    editUserProfile = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/user/edit\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    changeUserPassword = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/user/password\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n  \n\n}\n","import UserPicture from './user-picture';\n\nexport default UserPicture;","import React, { Component } from \"react\";\n\nimport UserService from '../../../services/user-service';\n\nexport default class UserPicture extends Component {\n\n    state = {\n        UserService: new UserService(),\n    }\n\n    onPictureUpload = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        this.state.UserService.uploadFile(localStorage.getItem(\"token\"), document.getElementById('profile-picture-form')).then(\n            res => {\n                console.log(res);\n                this.state.UserService.getUserData(localStorage.getItem(\"token\")).then(\n                    userData => {\n                        console.log(userData)\n                        localStorage.setItem('user', JSON.stringify(userData));\n                        window.location.reload();\n                    });\n            }\n        );\n    }\n\n    render() {\n        return (\n            <form id=\"profile-picture-form\" encType=\"multipart/form-data\" onSubmit={this.onPictureUpload}>\n                <div className=\"form_content upload\">\n                    <div className=\"form_elements upload\">\n                        <img src=\"/assets/illustration/selfie.svg\" className=\"popup-illustration\" alt=\"selfie\" />\n                        <input type=\"file\" id=\"profile-picture\" accept=\"image/*\" name=\"profilepic\" />\n                    </div>\n                    <button className=\"main\" type=\"submit\"> Upload </button>\n                    <div className=\"form_action upload\">\n                            <div className=\"cancel mobile-only\" onClick={this.props.changePopUpState}>Cancel</div>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}","export default class GroupService {\n\n    // _apiBase = 'http://localhost:5000/api';\n    _apiBase = 'https://api.jetdesk.app/api';\n\n    xhr = new XMLHttpRequest();\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    };\n\n    // getAllPeople = async () => {\n    //     const res = await this.getResource(`/people/`);\n    //     return res.results\n    //         .map(this._transformPerson)\n    //         .slice(0, 5);\n    // };\n\n\n    newTask = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/new\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    editTask = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/edit\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getTasks = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/tasks\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getTasksWithMyHomework = (link) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/tasks-with-my-homework\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getSingleTask = (taskLink) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/single-task\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'taskLink=' + encodeURIComponent(taskLink);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getTaskAdminRole = (taskLink) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/task-admin\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'taskLink=' + encodeURIComponent(taskLink);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getAdminRole = (groupLink) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/group-admin\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'groupLink=' + encodeURIComponent(groupLink);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    //homework\n\n    newHomework = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/homework-new\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getSingleHomework = (taskLink) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/homework-load-single\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'taskLink=' + encodeURIComponent(taskLink);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getAllHomework = (taskLink, groupLink) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/homework-load-all\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'taskLink=' + encodeURIComponent(taskLink) + '&link=' + encodeURIComponent(groupLink);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getSingleHomeworkAdmin = (homeworkLink) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/homework-load-single-admin\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'homeworkLink=' + encodeURIComponent(homeworkLink);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    rateHomeworkAdmin = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/homework-check-admin\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n\n    commentHomeworkAdmin = (homework, teacherComment) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/homework-comment-admin\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'homeworkLink=' + encodeURIComponent(homework) + '&teacherComment=' + encodeURIComponent(teacherComment);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    //attachments\n\n    newFile = (opts) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/new-file\";\n        xhr.open(\"POST\", url);\n        // xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        const postData = { ...opts };\n        xhr.send(JSON.stringify(postData));\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n\n    getTaskFiles = (link, taskLink) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/task-files\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link) + '&taskLink=' + encodeURIComponent(taskLink);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    deleteTaskFileAdmin = (fileId, groupLink) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/delete-task-file\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(groupLink) + '&fileId=' + encodeURIComponent(fileId);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n\n    getMyFiles = (link, taskLink) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/my-task-files\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link) + '&taskLink=' + encodeURIComponent(taskLink);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    deleteMyTaskFile = (fileId, groupLink) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/delete-my-file\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(groupLink) + '&fileId=' + encodeURIComponent(fileId);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n    getStudentTaskFiles = (link, homeworkLink) => {\n        const { xhr } = this;\n        let url = this._apiBase + \"/task/student-task-files\";\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('token'));\n        let params = 'link=' + encodeURIComponent(link) + '&homeworkLink=' + encodeURIComponent(homeworkLink);\n        xhr.send(params);\n        return new Promise((resolve, reject) => {\n            xhr.onreadystatechange = (e) => {\n                if (xhr.readyState === 4) {\n                    // console.log(xhr.responseText);\n                    resolve(JSON.parse(xhr.responseText));\n                }\n            }\n        });\n    }\n\n}\n","import React, { Component } from \"react\";\n\nimport TaskService from '../../../services/task-service';\n\nexport default class NewTask extends Component {\n\n    state = {\n        TaskService: new TaskService(),\n        taskColor: \"blue\",\n    }\n\n    componentDidMount() {\n        this.firstInput.focus();\n    }\n\n\n    updateNewTaskColor = (color) => {\n        this.setState({\n            taskColor: color\n        });\n    }\n\n\n    onTaskCreate = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        console.log(formData)\n\n        this.state.TaskService.newTask(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    // alert(\"Task created!\")\n                    window.location = \"/task/\" + res[\"response\"][\"link\"];\n                } else {\n                    alert(res[\"response\"][\"message\"]);\n                }\n            }\n        );\n    }\n\n    render() {\n        let today = new Date();\n        today = today.toISOString().substring(0, 10);\n\n        return (\n            <div className=\"popup_form\">\n                <h4>Create a task</h4>\n                <form onSubmit={this.onTaskCreate}>\n                    <div className=\"form_elements\">\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" ref={(input) => { this.firstInput = input; }} name=\"name\" placeholder=\"Task name (ex: Write a Poem)\" required />\n                            <span className=\"label\">Task name</span>\n                        </div>\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" name=\"topic\" placeholder=\"(Could be any subject)\" required />\n                            <span className=\"label\">Task subject</span>\n                        </div>\n                        <div className=\"form_input_section\">\n                            <input type=\"date\" id=\"start\" min={today} name=\"deadline\" placeholder=\"Select the deadline date\" required />\n                            <span className=\"label\">Task deadline</span>\n                        </div>\n                        <div className=\"form_input_section\">\n                            <input type=\"number\" name=\"maxMark\" placeholder=\"Ex.: 100\" required />\n                            <span className=\"label\">Max Mark</span>\n                        </div>\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" name=\"comment\" placeholder=\"(Task description)\" required />\n                            <span className=\"label\">Comment</span>\n                        </div>\n                        {/* <div className=\"form_input_section\">\n                        <input type=\"text\" name=\"color\" placeholder=\"(blue, green, red, pink, yellow)\" required/>\n                        <span className=\"label\">Color</span>\n                    </div> */}\n                        <div className=\"form_radio_color_section\">\n                            <span>Select a color tag for the task</span>\n\n                            <input type=\"radio\" name=\"color_picker\" id=\"color_1\" value=\"blue\" />\n                            <label htmlFor=\"color_1\" onClick={() => this.updateNewTaskColor(\"blue\")} className=\"small_circle blue\"></label>\n\n                            <input type=\"radio\" name=\"color_picker\" id=\"color_2\" value=\"green\" />\n                            <label htmlFor=\"color_2\" onClick={() => this.updateNewTaskColor(\"green\")} className=\"small_circle green\"></label>\n\n                            <input type=\"radio\" name=\"color_picker\" id=\"color_3\" value=\"red\" />\n                            <label htmlFor=\"color_3\" onClick={() => this.updateNewTaskColor(\"red\")} className=\"small_circle red\"></label>\n\n                            <input type=\"radio\" name=\"color_picker\" id=\"color_4\" value=\"pink\" />\n                            <label htmlFor=\"color_4\" onClick={() => this.updateNewTaskColor(\"pink\")} className=\"small_circle pink\"></label>\n\n                            <input type=\"radio\" name=\"color_picker\" id=\"color_5\" value=\"yellow\" />\n                            <label htmlFor=\"color_5\" onClick={() => this.updateNewTaskColor(\"yellow\")} className=\"small_circle yellow\"></label>\n                        </div>\n\n                        <input type=\"hidden\" name=\"color\" value={this.state.taskColor} />\n                        <input type=\"hidden\" name=\"link\" value={this.props.currentGroupLink} />\n                        <div className=\"bottom-gradient\"></div>\n                    </div>\n                    \n                    <div className=\"form_action\">\n                        <div className=\"cancel\" onClick={this.props.changePopUpState}>Cancel</div>\n                        <button className=\"main\" type=\"submit\">Create</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}","import Error from './error';\n\nexport default Error;","import React, { Component } from \"react\";\n\nexport default class Error extends Component {\n    render() {\n        return (\n            <div className=\"error_block\">\n                <img className=\"popup-illustration\" src=\"/assets/illustration/error.svg\" alt=\"Error\" />\n                <p className=\"error_text\">{this.props.errorMessage}</p>\n                <div className=\"cancel\" onClick={this.props.changePopUpState}>Cancel</div>\n                {/* <button className=\"main\" onClick={this.props.changePopUpState}>Okay</button> */}\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\n\nimport TaskService from '../../../services/task-service';\n\nexport default class EditTask extends Component {\n\n    state = {\n        TaskService: new TaskService(),\n        TaskInfo: null,\n        taskColor: null,\n    }\n\n    componentDidMount() {\n\n        let taskLink = this.props.currentGroupLink; //it's actually a Task Link\n        console.log(taskLink); \n\n        this.state.TaskService.getSingleTask(taskLink).then(\n            res => {\n                console.log(res);\n                if (res[\"code\"] === undefined) {\n                    this.setState({\n                        TaskInfo: res[\"response\"][0],\n                        taskColor: res[\"response\"][0][\"color\"]\n                    });\n                    this.firstInput.focus();\n                } else {\n                    window.location = \"/\";\n                }\n            });\n    }\n\n\n    updateNewTaskColor = (color) => {\n        this.setState({\n            taskColor: color\n        });\n    }\n\n\n    onTaskEdit = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        console.log(formData)\n\n        this.state.TaskService.editTask(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    // alert(\"Task edited!\");\n                    window.location = \"/task/\" + res[\"response\"][\"link\"];\n                } else {\n                    alert(\"Error! Check console\");\n                }\n            }\n        );\n    }\n\n    render() {\n\n        const { TaskInfo } = this.state;\n\n        let today = new Date();\n        today = today.toISOString().substring(0, 10);\n\n        if (TaskInfo !== null) {\n        return (\n            <div className=\"popup_form\">\n                <h4>Edit task</h4>\n                <form onSubmit={this.onTaskEdit}>\n                <div className=\"form_elements\">\n                    <div className=\"form_input_section\">\n                        <input type=\"text\" ref={(input) => { this.firstInput = input; }} name=\"name\" placeholder=\"Task name (ex: Write a Poem)\" defaultValue={TaskInfo.name} required />\n                        <span className=\"label\">Task name</span>\n                    </div>\n                    <div className=\"form_input_section\">\n                        <input type=\"text\" name=\"topic\" placeholder=\"(Could be any subject)\" defaultValue={TaskInfo.topic} required />\n                        <span className=\"label\">Task subject</span>\n                    </div>\n                    <div className=\"form_input_section\">\n                        <input type=\"date\" id=\"start\" min={today} name=\"deadline\" placeholder=\"Select the deadline date\" defaultValue={TaskInfo.deadline.substring(0, 10)} required />\n                        <span className=\"label\">Task deadline</span>\n                    </div>\n                    <div className=\"form_input_section\">\n                        <input type=\"number\" name=\"maxMark\" placeholder=\"Ex.: 100\" defaultValue={TaskInfo.max_mark} required />\n                        <span className=\"label\">Max Mark</span>\n                    </div>\n                    <div className=\"form_input_section\">\n                        <input type=\"text\" name=\"comment\" placeholder=\"(Task description)\" defaultValue={TaskInfo.comment} required />\n                        <span className=\"label\">Comment</span>\n                    </div>\n                    {/* <div className=\"form_input_section\">\n                        <input type=\"text\" name=\"color\" placeholder=\"(blue, green, red, pink, yellow)\" required/>\n                        <span className=\"label\">Color</span>\n                    </div> */}\n                    <div className=\"form_radio_color_section\">\n                        <span>Select a color tag for the task</span>\n                        <span>(Current color is {this.state.taskColor})</span>\n\n                        <input type=\"radio\" name=\"color_picker\" id=\"color_1\" value=\"blue\" />\n                        <label htmlFor=\"color_1\" onClick={() => this.updateNewTaskColor(\"blue\")} className=\"small_circle blue\"></label>\n\n                        <input type=\"radio\" name=\"color_picker\" id=\"color_2\" value=\"green\" />\n                        <label htmlFor=\"color_2\" onClick={() => this.updateNewTaskColor(\"green\")} className=\"small_circle green\"></label>\n\n                        <input type=\"radio\" name=\"color_picker\" id=\"color_3\" value=\"red\" />\n                        <label htmlFor=\"color_3\" onClick={() => this.updateNewTaskColor(\"red\")} className=\"small_circle red\"></label>\n\n                        <input type=\"radio\" name=\"color_picker\" id=\"color_4\" value=\"pink\" />\n                        <label htmlFor=\"color_4\" onClick={() => this.updateNewTaskColor(\"pink\")} className=\"small_circle pink\"></label>\n\n                        <input type=\"radio\" name=\"color_picker\" id=\"color_5\" value=\"yellow\" />\n                        <label htmlFor=\"color_5\" onClick={() => this.updateNewTaskColor(\"yellow\")} className=\"small_circle yellow\"></label>\n                    </div>\n\n                    <input type=\"hidden\" name=\"link\" value={TaskInfo.group_link} />\n                    <input type=\"hidden\" name=\"taskLink\" value={TaskInfo.task_link} />\n                    <input type=\"hidden\" name=\"color\" value={this.state.taskColor} />\n                    <div className=\"bottom-gradient\"></div>\n                    </div>\n                    <div className=\"form_action\">\n                        <div className=\"cancel\" onClick={this.props.changePopUpState}>Cancel</div>\n                        <button className=\"main\" type=\"submit\">Edit</button>\n                    </div>\n                </form>\n            </div>\n        );\n                } else{\n                    return(\n                        <p>Task can't be loaded...</p>\n                    )\n                }\n    }\n}","import React, { Component } from \"react\";\n\nimport TaskService from '../../../services/task-service';\n\nexport default class RateHomework extends Component {\n\n    state = {\n        TaskService: new TaskService(),\n    }\n\n    componentDidMount() {\n        // const argsData = this.props.currentGroupLink; //it's actually an Object with Homework and Task data\n\n        // console.log(argsData);\n\n        // let taskLink = this.props.currentGroupLink; //it's actually a Task Link\n        // console.log(taskLink); \n\n        // this.state.TaskService.getSingleTask(taskLink).then(\n        //     res => {\n        //         console.log(res);\n        //         if (res[\"code\"] === undefined) {\n        //             this.setState({\n        //                 TaskInfo: res[\"response\"][0],\n        //                 taskColor: res[\"response\"][0][\"color\"]\n        //             });\n        //             this.firstInput.focus();\n        //         } else {\n        //             window.location = \"/\";\n        //         }\n        //     });\n    }\n\n\n\n    onHomeworkRate = (e) => {\n        console.log(\"onHomeworkRate called\")\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        console.log(formData)\n\n        this.state.TaskService.rateHomeworkAdmin(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    // alert(\"Homework rated!\");\n                    window.location = \"/task/\" + this.props.currentGroupLink.task_link;\n                } else {\n                    alert(\"Error! Check console\");\n                }\n            }\n        );\n    }\n\n    render() {\n        const argsData = this.props.currentGroupLink; //it's actually an Object with Homework and Task data\n\n        console.log(argsData);\n\n        // const { TaskInfo } = this.state;\n\n        // if (TaskInfo !== null) {\n        return (\n            <div className=\"popup_form\">\n                <h4>Rate the work</h4>\n                <form onSubmit={this.onHomeworkRate}>\n                    <div className=\"form_elements\">\n                        <div className=\"form_input_section\">\n                            <textarea name=\"teacherComment\" placeholder=\"Comment...\" required></textarea>\n                            <span className=\"label\">Your comment</span>\n                        </div>\n\n                        <div className=\"form_input_section\">\n                            <input type=\"number\" min=\"1\" max={argsData.max_mark} name=\"teacherMark\" placeholder=\"Enter the mark\" required />\n                            <span className=\"label\">Mark (1/{argsData.max_mark})</span>\n                        </div>\n\n                        <input type=\"hidden\" name=\"homeworkLink\" value={argsData.homework_link} />\n\n                    </div>\n                    <div className=\"form_action\">\n                        <div className=\"cancel\" onClick={this.props.changePopUpState}>Cancel</div>\n                        <button className=\"main\" type=\"submit\">Send</button>\n                    </div>\n                </form>\n            </div>\n        );\n        // } else{\n        //     return(\n        //         <p>Task can't be loaded...</p>\n        //     )\n        // }\n    }\n}","import React, { Component } from \"react\";\n\nimport GroupService from '../../../services/group-service';\n\nexport default class NewFile extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n    }\n\n    componentDidMount() {\n        // const argsData = this.props.currentGroupLink; //it's actually an Object with Homework and Task data\n\n        // console.log(argsData);\n\n        // let taskLink = this.props.currentGroupLink; //it's actually a Task Link\n        // console.log(taskLink); \n\n        // this.state.TaskService.getSingleTask(taskLink).then(\n        //     res => {\n        //         console.log(res);\n        //         if (res[\"code\"] === undefined) {\n        //             this.setState({\n        //                 TaskInfo: res[\"response\"][0],\n        //                 taskColor: res[\"response\"][0][\"color\"]\n        //             });\n        //             this.firstInput.focus();\n        //         } else {\n        //             window.location = \"/\";\n        //         }\n        //     });\n    }\n\n\n\n    onNewFile = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        console.log(formData)\n\n        this.state.GroupService.newFile(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    // alert(\"Homework rated!\");\n                    window.location = \"/class/\" + this.props.currentGroupLink;\n                } else {\n                    alert(res[\"response\"][\"message\"]);\n                }\n            }\n        );\n    }\n\n    render() {\n        const currentGroupLink = this.props.currentGroupLink;\n\n        // const { TaskInfo } = this.state;\n\n        // if (TaskInfo !== null) {\n        return (\n            <div className=\"popup_form\">\n                <h4>New Attachment</h4>\n                <form onSubmit={this.onNewFile}>\n                    <div className=\"form_elements\">\n                        <div className=\"form_input_section\">\n                            <input type=\"url\" name=\"fileLink\" placeholder=\"Enter a link\" required />\n                            <span className=\"label\">Link a file from Dropbox, Google Drive, or One Drive</span>\n                        </div>\n\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" name=\"fileName\" placeholder=\"Name your attachment\" required />\n                            <span className=\"label\">Ex: Quantum chromodynamics</span>\n                        </div>\n\n                        <div className=\"form_input_section\">\n                            <textarea name=\"fileComment\" placeholder=\"Short comment...\" required></textarea>\n                            <span className=\"label\">Your short comment (file description)</span>\n                        </div>\n\n                        <input type=\"hidden\" name=\"link\" value={currentGroupLink} />\n\n                    </div>\n                    <div className=\"form_action\">\n                        <div className=\"cancel\" onClick={this.props.changePopUpState}>Cancel</div>\n                        <button className=\"main\" type=\"submit\">Attach</button>\n                    </div>\n                </form>\n            </div>\n        );\n        // } else{\n        //     return(\n        //         <p>Task can't be loaded...</p>\n        //     )\n        // }\n    }\n}","import React, { Component } from \"react\";\n\nimport TaskService from '../../../services/task-service';\n\nexport default class NewTaskFile extends Component {\n\n    state = {\n        TaskService: new TaskService(),\n    }\n\n    componentDidMount() {\n        // const argsData = this.props.currentGroupLink; //it's actually an Object with Homework and Task data\n\n        // console.log(argsData);\n\n        // let taskLink = this.props.currentGroupLink; //it's actually a Task Link\n        // console.log(taskLink); \n\n        // this.state.TaskService.getSingleTask(taskLink).then(\n        //     res => {\n        //         console.log(res);\n        //         if (res[\"code\"] === undefined) {\n        //             this.setState({\n        //                 TaskInfo: res[\"response\"][0],\n        //                 taskColor: res[\"response\"][0][\"color\"]\n        //             });\n        //             this.firstInput.focus();\n        //         } else {\n        //             window.location = \"/\";\n        //         }\n        //     });\n    }\n\n\n\n    onNewFile = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        console.log(formData)\n\n        const argsData = this.props.currentGroupLink; \n\n        this.state.TaskService.newFile(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    window.location = \"/task/\" + argsData.taskLink;\n                } else {\n                    alert(res[\"response\"][\"message\"]);\n                }\n            }\n        );\n    }\n\n    render() {\n        const argsData = this.props.currentGroupLink; //it's actually an Object with Homework and Task data\n\n        // const { TaskInfo } = this.state;\n\n        // if (TaskInfo !== null) {\n        return (\n            <div className=\"popup_form\">\n                <h4>New Attachment</h4>\n                <form onSubmit={this.onNewFile}>\n                    <div className=\"form_elements\">\n                        <div className=\"form_input_section\">\n                            <input type=\"url\" name=\"fileLink\" placeholder=\"Enter a link\" required />\n                            <span className=\"label\">Link a file from Dropbox, Google Drive, Google Docs or One Drive</span>\n                        </div>\n\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" name=\"fileName\" placeholder=\"Name your attachment\" required />\n                            <span className=\"label\">Ex: Quantum chromodynamics</span>\n                        </div>\n\n                        <input type=\"hidden\" name=\"link\" value={argsData.currentGroupLink} />\n                        <input type=\"hidden\" name=\"taskLink\" value={argsData.taskLink} />\n\n                    </div>\n                    <div className=\"form_action\">\n                        <div className=\"cancel\" onClick={this.props.changePopUpState}>Cancel</div>\n                        <button className=\"main\" type=\"submit\">Attach</button>\n                    </div>\n                </form>\n            </div>\n        );\n        // } else{\n        //     return(\n        //         <p>Task can't be loaded...</p>\n        //     )\n        // }\n    }\n}","import LeaveGroup from './leave-group';\n\nexport default LeaveGroup;","import React, { Component } from \"react\";\nimport GroupService from '../../../services/group-service';\n\nexport default class LeaveGroup extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n    }\n\n    leaveGroupAction = () => {\n        this.state.GroupService.leaveGroup(this.props.currentGroupLink.GroupLink).then(\n            res => {\n                console.log(res);\n                window.location = \"/\";\n                // if (res[\"response\"][\"code\"] === \"100\") {\n                //     window.location = \"/\";\n                // } else {\n                //     alert(res[\"response\"][\"message\"]);\n                // }\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"confirm\">\n                <div className=\"info\">Are you sure you want to leave the group?</div>\n                <div className=\"confirm-action\">\n                    <div className=\"yes\" onClick={this.leaveGroupAction}>Yes</div>\n                    <div className=\"no\" onClick={this.props.changePopUpState}>No</div>\n                </div>\n            </div>\n        );\n    }\n}\n","import NewLesson from './new-lesson';\n\nexport default NewLesson;","import React, { Component } from \"react\";\n\nimport GroupService from '../../../services/group-service';\n\nexport default class NewLesson extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n        checkboxIsChecked: false\n    }\n\n    componentDidMount() {\n        this.firstInput.focus();\n    }\n\n    handleCheckboxChange = (e) => {\n        let checked = e.target.checked;\n        console.log(checked)\n        this.setState({\n            checkboxIsChecked: checked\n        })\n      }\n\n    onEventCreate = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        console.log(formData)\n\n        this.state.GroupService.newLesson(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    // alert(\"Task created!\")\n                    window.location = \"/admin/manage-lessons/\" + res[\"response\"][\"link\"];\n                } else {\n                    alert(res[\"response\"][\"message\"]);\n                }\n            }\n        );\n    }\n\n    render() {\n        let today = new Date();\n        today = today.toISOString().substring(0, 10);\n\n        return (\n            <div className=\"popup_form\">\n                <h4>Add a Lesson (Event)</h4>\n                <form onSubmit={this.onEventCreate}>\n                    <div className=\"form_elements\">\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" ref={(input) => { this.firstInput = input; }} name=\"title\" placeholder=\"Event name (ex: Math Class)\" required />\n                            <span className=\"label\">Lesson name</span>\n                        </div>\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" name=\"description\" placeholder=\"(Event description)\" required />\n                            <span className=\"label\">Description</span>\n                        </div>\n                        <div className=\"form_input_section\">\n                            <input type=\"date\" min={today} name=\"eventDate\" placeholder=\"Select the event date\" required />\n                            <span className=\"label\">Date</span>\n                        </div>\n                        <div className=\"checkbox-line\">\n                        <input type=\"checkbox\" onChange={ this.handleCheckboxChange } value=\"true\" /> <span className=\"checkbox-info\">Repeat every week</span>\n                        </div>\n                        <br/><br/>\n                        {/* <div className=\"form_input_section\">\n                            <select name=\"daysOfWeek\">\n                                <option value=\"0\">Sunday</option>\n                                <option value=\"1\">Monday</option>\n                                <option value=\"2\">Tuesday</option>\n                                <option value=\"3\">Wednesday</option>\n                                <option value=\"4\">Thursday</option>\n                                <option value=\"5\">Friday</option>\n                                <option value=\"6\">Saturday</option>\n                            </select>\n                            <span className=\"label\">Week Day</span>\n                        </div> */}\n                        <div className=\"form_input_section\">\n                            <input type=\"time\" placeholder=\"Select the event time\" name=\"startTime\" min=\"00:00\" max=\"24:00\" required />\n                            <span className=\"label\">Time</span>\n                        </div>\n                        <div className=\"form_input_section\">\n                            <input type=\"text\" name=\"lessonUrl\" placeholder=\"(Google Meet, Zoom...)\" />\n                            <span className=\"label\">Lesson URL (Link)</span>\n                        </div>\n                        <input type=\"hidden\" name=\"link\" value={this.props.currentGroupLink} />\n                        <input type=\"hidden\" name=\"recurring\" value={this.state.checkboxIsChecked} />\n                        <br/><br/><br/><br/>\n                        <div className=\"bottom-gradient\"></div>\n                    </div>\n                    <div className=\"form_action\">\n                        <div className=\"cancel\" onClick={this.props.changePopUpState}>Cancel</div>\n                        <button className=\"main\" type=\"submit\">Create</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport GroupService from '../../../services/group-service';\n\nexport default class DeleteLesson extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n    }\n\n    deleteLessonAction = (lessonId) => {\n        this.state.GroupService.deleteLesson(this.props.currentGroupLink.link, lessonId).then(\n            res => {\n                console.log(res);\n                window.location.reload();\n            }\n        );\n    }\n\n    render() {\n        const eventId = this.props.currentGroupLink.eventId;\n\n        return (\n            <div className=\"confirm\">\n                <div className=\"info\">Are you sure you want to delete this lesson?</div>\n                <div className=\"confirm-action\">\n                    <div className=\"yes\" onClick={() => this.deleteLessonAction(eventId)}>Yes</div>\n                    <div className=\"no\" onClick={this.props.changePopUpState}>No</div>\n                </div>\n            </div>\n        );\n    }\n}\n","import GroupPicture from './group-picture';\n\nexport default GroupPicture;","import React, { Component } from \"react\";\n\nimport GroupService from '../../../services/group-service';\n\nexport default class GroupPicture extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n    }\n\n    onPictureUpload = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        console.log(this.props.currentGroupLink);\n        // this.state.GroupService.uploadFile(localStorage.getItem(\"token\"), this.props.currentGroupLink, document.getElementById('group-picture-form')).then(\n        //     res => {\n        //         console.log(res);\n        //         window.location.reload();\n        //     }\n        // );\n        this.state.GroupService.uploadFile(localStorage.getItem(\"token\"), this.props.currentGroupLink, document.getElementById('group-picture-form'));\n    }\n\n    render() {\n\n        return (\n            <form id=\"group-picture-form\" onSubmit={this.onPictureUpload}>\n                <div className=\"form_content upload\">\n                    <div className=\"form_elements upload\">\n                        <img src=\"/assets/illustration/selfie.svg\" className=\"popup-illustration\" alt=\"selfie\" />\n                        <input type=\"file\" id=\"profile-picture\" accept=\"image/*\" name=\"grouppic\" />\n                        <input type=\"hidden\" name=\"link\" value={this.props.currentGroupLink} />\n                    </div>\n                    <button className=\"main\" type=\"submit\"> Upload </button>\n                    <div className=\"form_action upload\">\n                        <div className=\"cancel mobile-only\" onClick={this.props.changePopUpState}>Cancel</div>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport GroupService from '../../../services/group-service';\n\nexport default class DeleteMember extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n    }\n\n    deleteMemberAction = () => {\n        this.state.GroupService.deleteGroupMember(this.props.currentGroupLink.GroupLink, this.props.currentGroupLink.UserId).then(\n            res => {\n                console.log(res);\n                window.location.reload();\n                // window.location = \"/\";\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"confirm\">\n                <div className=\"info\">Are you sure you want to remove this group member?</div>\n                <div className=\"confirm-action\">\n                    <div className=\"yes\" onClick={this.deleteMemberAction}>Yes</div>\n                    <div className=\"no\" onClick={this.props.changePopUpState}>No</div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport GroupService from '../../../services/group-service';\n\nexport default class MemberInfo extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n        MemberInfo: null,\n    }\n\n    componentDidMount() {\n\n        let memberId = this.props.currentGroupLink.UserId;\n        let groupLink = this.props.currentGroupLink.GroupLink;\n\n        this.state.GroupService.getMemberInfo(groupLink, memberId).then(\n            res => {\n                console.log(res);\n                if (res[\"code\"] === undefined) {\n                    this.setState({\n                        MemberInfo: res[\"response\"],\n                    });\n                } else {\n                    window.location = \"/\";\n                }\n            });\n    }\n\n\n    showRoleMenu = (num) => {\n        document.getElementById(\"roleMenuInfo\" + num).style.display = \"block\";\n\n        function checkForClick(event) {\n            let isClickInside = document.getElementById(\"roleMenuInfo\" + num).contains(event.target);\n\n            if (!isClickInside) {\n                document.getElementById(\"roleMenuInfo\" + num).style.display = \"none\";\n                document.removeEventListener(\"click\", checkForClick, false);\n            }\n        }\n\n        document.addEventListener('click', checkForClick);\n    }\n\n\n    setTeacher = (userId) => {\n        this.state.GroupService.setTeacher(this.props.currentGroupLink.GroupLink, userId).then(\n            res => {\n                if(res[\"response\"][\"code\"] !== \"100\"){\n                    alert(\"To many teachers for this group...\");\n                } else{\n                    window.location.reload(); \n                }\n            });\n    }\n\n    setTeacherToStudent = (userId) => {\n        this.state.GroupService.setTeacherToStudent(this.props.currentGroupLink.GroupLink, userId).then(\n            res => {\n                console.log(res);\n                window.location.reload();\n            });\n    }\n\n    render() {\n\n        const { MemberInfo } = this.state;\n        const { handlePopUpContent } = this.props;\n\n\n        if (MemberInfo !== null) {\n            return (\n                <div className=\"popup_form\">\n                    <h4>Information</h4>\n                    <form>\n                        <div className=\"form_elements\">\n                            <div className=\"info_block\">\n                                <span className=\"label\">Full Name</span>\n                                <span className=\"info\">{MemberInfo.userData.name}</span>\n                            </div>\n                            <div className=\"info_block\">\n                                <span className=\"label\">Role</span>\n                                {/* <span className=\"info\">{MemberInfo.userRole}</span> */}\n\n                                <span className=\"info\"> {MemberInfo.userRole} {MemberInfo.userRole !== \"admin\" ? <img onClick={() => this.showRoleMenu(MemberInfo.id)} className=\"down-icon\" src=\"/assets/svg/down.svg\" alt=\"Select\" /> : null} </span>\n\n                                <div className=\"role-menu\" id={\"roleMenuInfo\" + MemberInfo.id}>\n                                    {MemberInfo.userRole === \"teacher\" ? <React.Fragment><div className=\"line blue\"><img src=\"/assets/svg/check.svg\" alt=\"Check\" /> Teacher</div><div className=\"line\" onClick={() => this.setTeacherToStudent(MemberInfo.id)}>Student</div></React.Fragment> : <React.Fragment><div className=\"line blue\"><img src=\"/assets/svg/check.svg\" alt=\"Check\" /> Student</div><div className=\"line\" onClick={() => this.setTeacher(MemberInfo.id)}>Teacher</div></React.Fragment>}\n                                </div>\n\n                            </div>\n                            <div className=\"info_block\">\n                                <span className=\"label\">Mark</span>\n                                <span className=\"info\">{MemberInfo.totalUserMark}</span>\n                            </div>\n                            {MemberInfo.userRole !== \"admin\" ? <div className=\"delete-action\" onClick={() => handlePopUpContent(\"deleteMember\", { smallPopUp: true, GroupLink: this.props.currentGroupLink.GroupLink, UserId: MemberInfo.id })}>Remove member</div> : null }\n                        </div>\n                        {/* <div className=\"bottom-gradient\"></div> */}\n                        <div className=\"form_action\">\n                            <div className=\"cancel\" onClick={this.props.changePopUpState}>Cancel</div>\n                        </div>\n                    </form>\n                </div>\n            );\n        } else {\n            return (\n                <p>Member can't be loaded...</p>\n            )\n        }\n    }\n}","import React, { Component } from 'react';\nimport './popup.css';\n\nimport AddJoin from '../popup-content/add-join';\nimport AddGroupPopupContent from '../popup-content/add-join-next/add-group-popup-content';\nimport JoinGroupPopupContent from '../popup-content/add-join-next/join-group-popup-content';\nimport UserPicture from '../popup-content/user-picture';\nimport NewTask from '../popup-content/new-task/new-task';\nimport Error from '../popup-content/error';\n\nimport PopUpContext from '../context/popup-context';\nimport EditTask from '../popup-content/edit-task/edit-task';\nimport RateHomework from '../popup-content/homework/rate-homework';\nimport NewFile from '../popup-content/new-file/new-file';\nimport NewTaskFile from '../popup-content/new-file/new-task-file';\nimport LeaveGroup from '../popup-content/leave-group';\nimport NewLesson from '../popup-content/new-lesson';\nimport DeleteLesson from '../popup-content/delete-lesson/delete-lesson';\nimport GroupPicture from '../popup-content/group-picture';\nimport DeleteMember from '../popup-content/delete-member/delete-member';\nimport MemberInfo from '../popup-content/member-info/member-info';\n\n\nclass PopUp extends Component {\n    \n\n    render() {\n\n        const contentJson = {\n            addJoin: <AddJoin handlePopUpContent={this.context.handlePopUpContent} changePopUpState={this.context.changePopUpState}/>,\n            addGroupPopupContent: <AddGroupPopupContent changePopUpState={this.context.changePopUpState} />,\n            joinGroupPopupContent: <JoinGroupPopupContent changePopUpState={this.context.changePopUpState} updateErrorMessage={this.context.updateErrorMessage} handlePopUpContent={this.context.handlePopUpContent}/>,\n            userPicture: <UserPicture changePopUpState={this.context.changePopUpState} />,\n            newTask: <NewTask currentGroupLink={this.context.currentGroupLink} changePopUpState={this.context.changePopUpState} />,\n            editTask: <EditTask currentGroupLink={this.context.currentGroupLink} changePopUpState={this.context.changePopUpState} />,\n            rateHomework: <RateHomework currentGroupLink={this.context.currentGroupLink} changePopUpState={this.context.changePopUpState} />,\n            newFile: <NewFile currentGroupLink={this.context.currentGroupLink} changePopUpState={this.context.changePopUpState} />,\n            leaveGroup: <LeaveGroup currentGroupLink={this.context.currentGroupLink} changePopUpState={this.context.changePopUpState} />,\n            newTaskFile: <NewTaskFile currentGroupLink={this.context.currentGroupLink} changePopUpState={this.context.changePopUpState} />,\n            newLesson: <NewLesson currentGroupLink={this.context.currentGroupLink} changePopUpState={this.context.changePopUpState} />,\n            deleteLesson: <DeleteLesson currentGroupLink={this.context.currentGroupLink} changePopUpState={this.context.changePopUpState} />,\n            groupPicture: <GroupPicture currentGroupLink={this.context.currentGroupLink} changePopUpState={this.context.changePopUpState} />,\n            deleteMember: <DeleteMember currentGroupLink={this.context.currentGroupLink} changePopUpState={this.context.changePopUpState} />,\n            memberInfo: <MemberInfo handlePopUpContent={this.context.handlePopUpContent} currentGroupLink={this.context.currentGroupLink} changePopUpState={this.context.changePopUpState} />,\n            error: <Error errorMessage={this.context.errorMessage} changePopUpState={this.context.changePopUpState} />\n        };\n\n        // const popupSize = {\n        //     width: small ? '27%' : '45%'\n        // };\n\n        return (\n            <PopUpContext.Consumer>\n                {\n                    (contextProps) => {\n                        const { changePopUpState, popUpContent } = contextProps;\n                        let smallPopUp;\n                        if(this.context.currentGroupLink !== null){\n                            smallPopUp = this.context.currentGroupLink.smallPopUp;\n                        } else{\n                            smallPopUp = false;\n                        }\n\n                        return (\n                            <div className={ smallPopUp ? \"popup small\" : \"popup\"}>\n                                <img className=\"close\" onClick={changePopUpState} src=\"/assets/svg/close.svg\" alt=\"Close\"></img>\n                                {popUpContent ? contentJson[popUpContent] : null}\n                                {/* {\n                                React.Children.map(this.props.children, (child, idx) => {\n                                    return child;\n                                })\n                                } */}\n                            </div>\n                        );\n                    }\n                }\n            </PopUpContext.Consumer>\n        );\n    }\n}\n\nPopUp.contextType = PopUpContext;\n\nexport default PopUp;","import PopUp from './popup';\n\nexport default PopUp;","import React, { Component } from 'react';\n\nimport Header from '../../../header';\nimport LeftMenu from '../../../left-menu';\nimport PopUp from '../../../popup';\n\nimport NewPopUp from '../../../popup/new-popup';\n\nimport PopUpContext from '../../../context/popup-context';\n\n//UserPage\nexport default class DefaultLayout extends Component {\n\n\n    state = {\n        menuOpened: false,\n    }\n\n    handleTouchMove(e) {\n        e.preventDefault();\n      }\n\n    openHideMenu = () => {\n        console.log(this.state.menuOpened);\n        if(this.state.menuOpened){\n            console.log(\"unset\")\n            // document.body.style.overflow = 'unset';\n            document.getElementById(\"page\").removeEventListener('touchmove', this.handleTouchMove);\n        } else{\n            console.log(\"hidden\")\n            // document.body.style.overflow = 'hidden';\n            // document.getElementById(\"page\").addEventListener('touchmove', function(e){ e.preventDefault(); });\n            document.getElementById(\"page\").addEventListener('touchmove', this.handleTouchMove, false);\n        }\n        this.setState({\n            menuOpened: !this.state.menuOpened\n        });\n        // document.body.style.overflow = 'unset';\n    }\n\n    onlyHideMenu = () => {\n        this.setState({\n            menuOpened: false\n        });\n        document.getElementById(\"page\").removeEventListener('touchmove', this.handleTouchMove);\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"app\">\n                <div className=\"layout\">\n                    <React.Fragment>\n                        <LeftMenu menuOpened={this.state.menuOpened} openHideMenu={this.openHideMenu} onlyHideMenu={this.onlyHideMenu} handlePopUpContent={this.context.handlePopUpContent} serverUrl={this.context.serverUrl} />\n                        <div className=\"page\" id=\"page\">\n                            <Header menuOpened={this.state.menuOpened} openHideMenu={this.openHideMenu} serverUrl={this.context.serverUrl} currentGroupLink={this.context.currentGroupLink} />\n                            <div className=\"page_content\">\n                                {\n                                    React.Children.map(this.props.children, (child, idx) => {\n                                        return child;\n                                    })\n                                }\n                            </div>\n                        </div>\n                        {this.context.showingPopUp ? <div onClick={this.context.changePopUpState} className=\"popup-overlay\" id=\"popupOverlay\"></div> : null}\n                        {this.context.showingPopUp ? <PopUp /> : null}\n                        {/* <NewPopUp /> */}\n                    </React.Fragment>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nDefaultLayout.contextType = PopUpContext;","import React, { Component } from 'react';\nimport './new-popup.css';\n\nimport AddJoin from '../popup-content/add-join';\nimport AddGroupPopupContent from '../popup-content/add-join-next/add-group-popup-content';\nimport JoinGroupPopupContent from '../popup-content/add-join-next/join-group-popup-content';\nimport UserPicture from '../popup-content/user-picture';\nimport NewTask from '../popup-content/new-task/new-task';\nimport Error from '../popup-content/error';\nimport EditTask from '../popup-content/edit-task/edit-task';\nimport RateHomework from '../popup-content/homework/rate-homework';\nimport NewFile from '../popup-content/new-file/new-file';\n\n\nclass NewPopUp extends Component {\n\n    state = {\n        showingPopUp: false,\n        popUpContent: null,\n        errorMessage: null,\n        currentGroupLink: null\n      };\n\n\n    changePopUpState = () => {\n        this.setState({\n          showingPopUp: !this.state.showingPopUp\n        });\n      }\n\n      updateErrorMessage = (msg) => {\n        this.setState({\n          errorMessage: msg\n        });\n      }\n    \n      handlePopUpContent = (name, currentGroupLink) => {\n        console.log(\"handlePopUpContent: \" + name);\n    \n        if (currentGroupLink === undefined) {\n          currentGroupLink = null;\n        }\n        console.log(\"currentGroupLink: \" + currentGroupLink);\n    \n        const { showingPopUp, popUpContent } = this.state;\n        if (popUpContent === name) {\n          if (!showingPopUp) {\n            this.setState({ showingPopUp: true, popUpContent: name, currentGroupLink: currentGroupLink });\n          } else {\n            this.setState({ showingPopUp: false, popUpContent: null, currentGroupLink: null });\n          }\n        } else {\n          this.setState({ showingPopUp: true, popUpContent: name, currentGroupLink: currentGroupLink });\n        }\n      };\n\n\n    render() {\n\n        const { changePopUpState, updateErrorMessage, handlePopUpContent } = this;\n        const { currentGroupLink, popUpContent } = this.state;\n\n        const contentJson = {\n            addJoin: <AddJoin handlePopUpContent={handlePopUpContent} />,\n            addGroupPopupContent: <AddGroupPopupContent changePopUpState={changePopUpState} />,\n            joinGroupPopupContent: <JoinGroupPopupContent changePopUpState={changePopUpState} updateErrorMessage={updateErrorMessage} handlePopUpContent={handlePopUpContent} />,\n            userPicture: <UserPicture />,\n            newTask: <NewTask currentGroupLink={currentGroupLink} changePopUpState={changePopUpState} />,\n            editTask: <EditTask currentGroupLink={currentGroupLink} changePopUpState={changePopUpState} />,\n            rateHomework: <RateHomework currentGroupLink={currentGroupLink} changePopUpState={changePopUpState} />,\n            newFile: <NewFile currentGroupLink={currentGroupLink} changePopUpState={changePopUpState} />,\n            error: <Error errorMessage={this.context.errorMessage} changePopUpState={changePopUpState} />\n        };\n\n        // const popupSize = {\n        //     width: small ? '27%' : '45%'\n        // };\n\n        return (\n            <div className=\"new-popup\">\n                <img className=\"close\" onClick={changePopUpState} src=\"/assets/svg/close.svg\" alt=\"Close\"></img>\n                {popUpContent ? contentJson[popUpContent] : null}\n                {/* {\n                                React.Children.map(this.props.children, (child, idx) => {\n                                    return child;\n                                })\n                                } */}\n            </div>\n        );\n    }\n}\n\nexport default NewPopUp;","import DefaultLayout from './layout.js';\n\nexport default DefaultLayout;","import HomePage from './home-page';\n\nexport default HomePage;","import React, { Component } from \"react\";\n\nexport default class HomePage extends Component {\n    render() {\n        let userData = localStorage.getItem(\"user\");\n        userData = JSON.parse(userData);\n        // console.log(userData);\n        const userName = userData[\"response\"][0][\"name\"].replace(/ .*/,'');\n        return (\n                <div className=\"home\">\n                    <img className=\"illustration\" src=\"/assets/illustration/new.svg\" alt=\"Quick Start\"></img>\n                    <p>Hi, {userName}! Join or create a class <br />\n                        by clicking on the \"+\"\n                    </p>\n                </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './user-page.css';\n\nimport UserService from '../../../services/user-service';\n\nimport PopUpContext from '../../context/popup-context';\n\n\nexport default class UserPage extends Component {\n\n    state = {\n        UserService: new UserService(),\n        currentUserUsage: null,\n        currentUserPlan: null\n    }\n\n    componentDidMount() {\n        this.state.UserService.getUserLimit(localStorage.getItem(\"token\")).then(\n            userLimit => {\n                console.log(userLimit)\n                this.setState({\n                    currentUserUsage: userLimit[\"response\"][\"totalFollowers\"],\n                    currentUserPlan: userLimit[\"response\"][\"userPlan\"],\n                });\n            });\n    }\n\n    onProfileEdit = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        this.state.UserService.editUserProfile(formData).then(\n            res => {\n                console.log(res);\n                this.state.UserService.getUserData(localStorage.getItem(\"token\")).then(\n                    userData => {\n                        console.log(userData)\n                        localStorage.setItem('user', JSON.stringify(userData));\n                        window.location.reload();\n                    });\n            }\n        );\n    }\n\n    onPasswordChange = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        this.state.UserService.changeUserPassword(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"] !== undefined) {\n                    alert(\"Password has been updated successfully, please login.\");\n                    localStorage.clear();\n                    window.location.reload();\n                } else {\n                    // alert(\"Error! \" + res[\"message\"]);\n                    const PopUpContext = this.context;\n                    // console.log(PopUpContext);\n                    PopUpContext.updateErrorMessage(res[\"message\"]);\n                    PopUpContext.handlePopUpContent(\"error\");\n                }\n            }\n        );\n    }\n\n    render() {\n\n        const { serverUrl, logOut, handlePopUpContent } = this.context;\n\n        const { currentUserPlan } = this.state;\n\n        let userData = localStorage.getItem(\"user\");\n        userData = JSON.parse(userData);\n        const userIcon = serverUrl + userData[\"response\"][0][\"picture\"];\n        const userName = userData[\"response\"][0][\"name\"];\n        const userEmail = userData[\"response\"][0][\"email\"];\n\n        return (\n            <React.Fragment>\n                <div className=\"goback_button\" onClick={() => window.history.back()}>\n                    <img className=\"back_icon\" src=\"/assets/svg/back.svg\" alt=\"Back\" />\n                        Go back\n                    </div>\n                <div className=\"userpage\">\n                    <div className=\"left-side\">\n                        <div className=\"page_heading\">Settings </div>\n                        <div className=\"profile-settings\">\n                            <h4>Profile</h4>\n                            <div className=\"profile_picture\">\n                                <span>Porfile picture</span>\n                                <div className=\"profile_picture_line\">\n                                    <img src={userIcon} alt=\"User\"></img>\n                                    <span className=\"upload\" onClick={() => handlePopUpContent(\"userPicture\")}>Upload profile picture</span>\n                                </div>\n                            </div>\n                            <form onSubmit={this.onProfileEdit}>\n                                <div className=\"profile_settings_input_block\">\n                                    <span>Full name</span>\n                                    <input type=\"text\" name=\"name\" defaultValue={userName} />\n                                </div>\n                                <div className=\"profile_settings_input_block\">\n                                    <span>Email</span>\n                                    <input type=\"email\" name=\"email\" defaultValue={userEmail} />\n                                </div>\n                                <button className=\"main\" type=\"submit\">Save</button>\n                            </form>\n                            <br /> <br />\n                            <h3>Security</h3>\n                            <form onSubmit={this.onPasswordChange}>\n                                <div className=\"profile_settings_input_block\">\n                                    <span>Old Password</span>\n                                    <input type=\"password\" name=\"password\" placeholder=\"*************\" />\n                                    {/* <img className=\"profile_edit\" src=\"/assets/svg/edit.svg\" alt=\"Edit\"></img> */}\n                                </div>\n                                <div className=\"profile_settings_input_block\">\n                                    <span>New Password</span>\n                                    <input type=\"password\" name=\"newPassword\" placeholder=\"*************\" />\n                                </div>\n                                <button className=\"main\" type=\"submit\">Update</button>\n                            </form>\n                        </div>\n                        <br /> <br /> <br /> <br />\n                        <div className=\"logout pc\" onClick={logOut}>Log Out</div>\n                    </div>\n                    <div className=\"right-side\">\n                        <h4>Your plan</h4>\n                        <div className=\"plan\">\n                            <div className=\"plan-header\">\n                                <div className=\"top-line\">\n                                    <h4>Personal <br />Plan</h4>\n                                    <span>Forever</span>\n                                </div>\n                                <p>Your total limit of members in groups: {this.state.currentUserUsage}/{currentUserPlan === \"free\" ? 10 : null}{currentUserPlan === \"enterprise\" ? 250 : null}  <img src=\"/assets/svg/info.svg\" alt=\"info\" /></p>\n                            </div>\n                            <div className=\"plan-info\">\n                                <p>For everyone who wants to learn and teach productivly!</p>\n                                <ul>\n                                    <li><img src=\"/assets/svg/blue-check.svg\" alt=\"check\" />Ulimited tasks</li>\n                                    <li><img src=\"/assets/svg/blue-check.svg\" alt=\"check\" />Ulimited lessons</li>\n                                    <li><img src=\"/assets/svg/blue-check.svg\" alt=\"check\" />Ulimited attachments</li>\n                                    <li><img src=\"/assets/svg/blue-check.svg\" alt=\"check\" />Visible/Invisible rating</li>\n                                    <li><img src=\"/assets/svg/blue-check.svg\" alt=\"check\" />Group chat</li>\n                                </ul>\n                            </div>\n                        </div>\n                        <br /> <br /> <br /> <br />\n                        <div className=\"logout mobile\" onClick={logOut}>Log Out</div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nUserPage.contextType = PopUpContext;","import UserPage from './user-page';\n\nexport default UserPage;","import React, { Component } from 'react';\n\n\nexport default class ClockBlock extends Component {\n\n    state = {\n        Clock: null\n    }\n\n    updateClock = () => {\n        let date = new Date();\n        let hours = date.getHours();\n        let minutes = (date.getMinutes() < 10 ? '0' : '') + date.getMinutes();\n        // let seconds = date.getSeconds();\n        let time = hours + \":\" + minutes;\n        this.setState({\n            Clock: time\n        })\n    }\n\n    componentDidMount() {\n        this.updateClock();\n        this.intervalClock = setInterval(\n            () => this.updateClock(),\n            1000\n        );\n    }\n\n\n    componentWillUnmount() {\n        clearInterval(this.intervalClock);\n    }\n\n\n    render() {\n\n        const { Clock } = this.state;\n\n        return (\n            <div className=\"clock\">\n             {Clock}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport TaskService from '../../../../services/task-service';\n\nimport PopUpContext from '../../../context/popup-context';\n\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class TasksBlock extends Component {\n\n    state = {\n        TaskService: new TaskService(),\n        TasksList: null,\n        GroupLink: null\n    }\n\n    componentDidMount() {\n        this.componentDidUpdate();\n    }\n\n    componentDidUpdate() {\n        const link = this.props.link;\n        if (link !== this.state.GroupLink) {\n            this.setState({\n                GroupLink: link\n            });\n            this.state.TaskService.getTasks(this.props.link).then(\n                res => {\n                    console.log(res[\"response\"]);\n                    // if (res[\"response\"] !== false) {\n                    this.setState({\n                        TasksList: res[\"response\"]\n                    });\n                    // }\n                });\n        }\n    }\n\n\n    render() {\n\n        const { TasksList } = this.state;\n        const { reformatDate } = this.context;\n\n        if (TasksList !== null) {\n            const AllTasks = () => TasksList.map((task) =>\n                <div className=\"task_slide\" key={task.task_link}>\n                    <div className=\"task_heading\">\n                        <div className={\"task_circle small_circle \" + task.color}></div>\n                        {(task.name.length < 25 ? task.name : task.name.substr(0, 25) + \"...\")}\n                    </div>\n                    <div className=\"task_deadline\">Untill {reformatDate(task.deadline.substr(0, 10))}</div>\n                    <div className=\"task_short_description\">\n                        {(task.comment.length < 90 ? task.comment : task.comment.substr(0, 90) + \"...\")}\n                    </div>\n                    <Link to={\"/task/\" + task.task_link}><button className=\"main task_more\">Open the task</button></Link>\n                    <Link to={\"/task/\" + task.task_link}><button className=\"main task_more mobile\">More</button></Link>\n                </div>\n            );\n\n            if (TasksList !== false) {\n                return (\n                    <div className=\"tasks_slider\">\n                        <AllTasks />\n                    </div>\n                );\n            } else {\n                return (\n                    <div className=\"widget_info\">\n                        <div className=\"info-message\">\n                            <img className=\"info-illustration\" src=\"/assets/illustration/desk-gray.svg\" alt=\"Desk\" />\n                            <span>The teacher hasn't posted any tasks yet. You can rest! </span>\n                        </div>\n                    </div>\n                );\n            }\n        } else {\n            return (\n                <p>Loading...</p>\n            );\n        }\n    }\n}\n\nTasksBlock.contextType = PopUpContext;","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport GroupService from '../../../../services/group-service';\n\nimport PopUpContext from '../../../context/popup-context';\n\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class RatingBlock extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n        RatingList: null,\n        GroupLink: null,\n        showingRatingReloadInfo: null //to reload the block\n    }\n\n    componentDidMount() {\n        this.componentDidUpdate();\n    }\n\n    componentDidUpdate() {\n        const showingRating = this.props.showingRating;\n        const link = this.props.link;\n        if (link !== this.state.GroupLink || showingRating !== this.state.showingRatingReloadInfo) {\n            this.setState({\n                GroupLink: link,\n                showingRatingReloadInfo: this.props.showingRating\n            });\n            this.state.GroupService.getGroupRating(this.props.link).then(\n                res => {\n                    console.log(res);\n                    if (res[\"response\"][\"code\"] !== undefined && res[\"response\"][\"code\"] !== 777) {\n                        this.setState({\n                            RatingList: \"off\"\n                        });\n                    } else {\n                        this.setState({\n                            RatingList: res[\"response\"]\n                        });\n                    }\n                });\n        }\n    }\n\n\n    render() {\n\n        const { RatingList } = this.state;\n        const { serverUrl } = this.context;\n\n        if (RatingList !== null) {\n\n            const RatingListBlock = () => RatingList.map((userRating, index) =>\n                <div className=\"rating-line\" key={userRating.userData.name}>\n                    <span className=\"place\">{index + 1}</span>\n                    <img src={serverUrl + userRating.userData.picture} alt=\"User Pic\" />\n                    <span className=\"name\">{userRating.userData.name}</span>\n                </div>\n            );\n\n            if (RatingList !== false) {\n                if (RatingList !== \"off\") {\n                    return (\n                        <div className=\"rating-list\">\n                            <RatingListBlock />\n                        </div>\n                    );\n                } else {\n                    return (\n                        <div className=\"widget_info\">\n                            <div className=\"info-message\">\n                                <img className=\"info-illustration\" src=\"/assets/illustration/champ-gray.svg\" alt=\"Rating\" />\n                                <span>Oops, the admin has hidden<br/> group rating</span>\n                            </div>\n                        </div>\n                    );\n                }\n            } else {\n                return (\n                    <div className=\"widget_info\">\n                        <img src=\"/assets/svg/circle.svg\" alt=\"Circle\" />\n                        <span>No data to rate from... </span>\n                    </div>\n                );\n            }\n        } else {\n            return (\n                <p>Loading...</p>\n            );\n        }\n    }\n}\n\nRatingBlock.contextType = PopUpContext;","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport GroupService from '../../../../services/group-service';\n\nimport PopUpContext from '../../../context/popup-context';\n\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class FilesBlock extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n        FilesList: null,\n        GroupLink: null\n    }\n\n    componentDidMount() {\n        this.componentDidUpdate();\n    }\n\n    componentDidUpdate() {\n        const link = this.props.link;\n        if (link !== this.state.GroupLink) {\n            this.setState({\n                GroupLink: link\n            });\n            this.state.GroupService.getGroupFiles(this.props.link).then(\n                res => {\n                    this.setState({\n                        FilesList: res[\"response\"]\n                    });\n                });\n        }\n    }\n\n\n\n    render() {\n\n        const { FilesList } = this.state;\n\n        if (FilesList !== null) {\n\n            if (FilesList !== false) {\n\n                const FilesListBlock = () => FilesList.map((fileInfo, index) =>\n                    <div className=\"file-line\" key={fileInfo.file_name + index}>\n                        <div className=\"top-line\">\n                            <span className=\"name\">{fileInfo.file_name}</span>\n                            <span className=\"type\">{fileInfo.type}</span>\n                            <a target='_blank' rel=\"noopener noreferrer\" href={fileInfo.file_link}><img src=\"/assets/svg/download.svg\" alt=\"Open\" /></a>\n                        </div>\n                        <span className=\"comment\">{fileInfo.file_comment.substr(0, 40)}</span>\n                    </div>\n                );\n\n                return (\n                    <div className=\"files-list\">\n                        <FilesListBlock />\n                    </div>\n                );\n            } else {\n                return (\n                    <div className=\"widget_info\">\n                        <div className=\"info-message\">\n                            <img className=\"info-illustration\" src=\"/assets/illustration/files-gray.svg\" alt=\"Files\" />\n                            <span>Oops, a teacher hasn't attached any<br/> files yet</span>\n                        </div>\n                    </div>\n                );\n            }\n        } else {\n            return (\n                <p>Loading...</p>\n            );\n        }\n    }\n}\n\nFilesBlock.contextType = PopUpContext;","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport GroupService from '../../../../services/group-service';\nimport PopUpContext from '../../../context/popup-context';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport listPlugin from '@fullcalendar/list';\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class LessonsBlock extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n        LessonsList: null,\n        GroupLink: null,\n        showingEventBlock: false,\n        selectedEvent: null\n    }\n\n    componentDidMount() {\n        this.componentDidUpdate();\n    }\n\n    componentDidUpdate() {\n        const link = this.props.link;\n        if (link !== this.state.GroupLink) {\n            this.setState({\n                GroupLink: link\n            });\n            this.state.GroupService.getLessons(this.props.link).then(\n                res => {\n                    console.log(res);\n                    this.setState({\n                        LessonsList: res[\"response\"]\n                    });\n                });\n        }\n    }\n\n\n    hideEventInfo = () => {\n        this.setState({\n            showingEventBlock: false\n        })\n    }\n\n    handleDateClick = (arg) => { // bind with an arrow function\n        console.log(arg);\n        // alert(arg.dateStr)\n    }\n\n    handleEventClick = (arg) => { // bind with an arrow function\n        console.log(arg);\n        // console.log(arg.event._def)\n        this.setState({\n            selectedEvent: arg.event,\n            showingEventBlock: true\n        })\n    }\n\n    setClipboard = (value) => {\n        let tempInput = document.createElement(\"input\");\n        tempInput.style = \"position: absolute; left: -1000px; top: -1000px\";\n        tempInput.value = value;\n        document.body.appendChild(tempInput);\n        tempInput.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(tempInput);\n        alert(\"Copied!\")\n    }\n\n    render() {\n\n        const { showingEventBlock, selectedEvent, LessonsList, GroupLink } = this.state;\n\n        if (LessonsList !== null) {\n\n            let eventsArr = [];\n\n            for (let i = 0; i < LessonsList.length; i++) {\n                eventsArr.push({\n                    daysOfWeek: [LessonsList[i][\"days_of_week\"]],\n                    startTime: LessonsList[i][\"start_time\"],\n                    title: LessonsList[i][\"title\"],\n                    description: LessonsList[i][\"description\"],\n                    extendedProps: { lesson_url: LessonsList[i][\"lesson_url\"] }\n                })\n            }\n\n            console.log(eventsArr);\n\n            const EventInfoBlock = (props) => {\n                console.log(props);\n                if (showingEventBlock) {\n                    const info = props.eventInfo._def;\n                    const dateObj = props.eventInfo._instance.range.start;\n                    let date = new Date(dateObj);\n                    let dateOffset = date.getTimezoneOffset();\n                    dateOffset = dateOffset.toString().substring(1);\n                    date.setMinutes(date.getMinutes() - dateOffset);\n                    const day = date.getDay();\n                    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n                    const month = monthNames[date.getMonth()];\n                    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n                    const dayName = days[date.getDay()];\n                    const hours = date.getHours();\n                    let minutes = date.getMinutes();\n                    console.log(minutes.length);\n                    if (minutes.toString().length === 1) {\n                        minutes = \"0\" + minutes\n                    }\n\n                    const lessonsActionsStyle = {\n                        display: info.extendedProps.lesson_url !== null ? \"flex\" : \"none\",\n                    }\n\n                    return (\n                        <div className=\"event-info\">\n                            <div className=\"top-line\">\n                                <div className=\"name\">\n                                    <div className=\"circle\"></div> {info.title}\n                                </div>\n                                <img onClick={this.hideEventInfo} className=\"event-info-close\" src=\"/assets/svg/blue-x.svg\" />\n                            </div>\n                            <div className=\"date\">\n                                <div className=\"blue\">{month} {day}, {hours}:{minutes} </div>\n                                {dayName}\n                            </div>\n                            {/* <span className=\"hours\">{hours}:{minutes}</span> */}\n                            <div className=\"event-description\">\n                                <p>{info.extendedProps.description}</p>\n                                <div className=\"bottom-gradient\"></div>\n                            </div>\n                            <div className=\"actions\" style={lessonsActionsStyle}>\n                                <a rel=\"noopener noreferrer\" href={`${info.extendedProps.lesson_url}`} target=\"_blank\">\n                                    <button className=\"main\">Join meeting</button>\n                                </a>\n                                <div className=\"copy-link\" onClick={() => this.setClipboard(info.extendedProps.lesson_url)}>\n                                    <img src=\"/assets/svg/copy.svg\" />\n                                    Copy link\n                                 </div>\n                            </div>\n                        </div>\n                    )\n                } else {\n                    return null;\n                }\n            }\n\n            return (\n\n                <div className=\"calendar-wrapper\">\n                    <FullCalendar\n                        plugins={[dayGridPlugin, listPlugin, interactionPlugin]}\n                        dateClick={this.handleDateClick}\n                        // eventContent={renderEventContent}\n                        eventClick={this.handleEventClick}\n                        timezone=\"local\"\n                        ignoreTimezone={false}\n                        initialView=\"listMonth\" //dayGridMonth, listMonth\n                        weekends={true}\n                        // events={[\n                        //     // { title: 'event 1', date: '2020-10-09 20:30', description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit ut aliquam, purus sit amet luctus venenatis, lectus magna fringillaurna, porttitor rhoncus dolor purus non enim praesent elementum... Lorem ipsum dolor sit amet, consectetur adipiscing elit ut aliquam, purus sit amet luctus venenatis, lectus magna fringillaurna, porttitor rhoncus dolor purus non enim praesent elementum...', extendedProps: { lesson_url: \"http://finelabs.tech\" } }, //url: 'http://google.com/' \n                        //     // { title: 'event 2', date: '2020-10-09 15:01', description: 'This is a cool event', },\n                        //     // { title: 'event 3', date: '2020-10-19 15:40', description: 'This is a cool event', },\n                        //     // { title: 'event 4', date: '2020-10-19 16:40', description: 'This is a cool event', },\n                        //     // { title: 'event 5', date: '2020-10-19 17:40', description: 'This is a cool event', },\n                        //     // { title: 'event 6', date: '2020-10-19 18:00', description: 'This is a cool event', },\n                        //     // { title: \"Arthur's Birthday!\", date: '2020-10-20 12:00', description: 'Dope', }\n                        //     {\n                        //         daysOfWeek: [ '3' ], // these recurrent events move separately\n                        //         startTime: '11:00',\n                        //         title: 'some event',\n                        //         description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit ut aliquam, purus sit amet luctus venenatis, lectus magna fringillaurna, porttitor rhoncus dolor purus non enim praesent elementum... Lorem ipsum dolor sit amet, consectetur adipiscing elit ut aliquam, purus sit amet luctus venenatis, lectus magna fringillaurna, porttitor rhoncus dolor purus non enim praesent elementum...', extendedProps: { lesson_url: \"http://finelabs.tech\" }\n                        //       },\n                        //       {\n                        //         daysOfWeek: [ '5' ], // these recurrent events move separately\n                        //         startTime: '16:30',\n                        //         title: 'Friday Night Cafe',\n                        //         description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit ut aliquam, purus sit amet luctus venenatis, lectus magna fringillaurna, porttitor rhoncus dolor purus non enim praesent elementum... Lorem ipsum dolor sit amet, consectetur adipiscing elit ut aliquam, purus sit amet luctus venenatis, lectus magna fringillaurna, porttitor rhoncus dolor purus non enim praesent elementum...', extendedProps: { lesson_url: \"http://finelabs.tech\" }\n                        //       }\n                        // ]}\n                        events={eventsArr}\n\n                    />\n                    <EventInfoBlock eventInfo={selectedEvent} />\n                </div>\n            );\n\n        } else {\n            return (\n                <p>Loading...</p>\n            );\n        }\n    }\n}\n\n\nfunction renderEventContent(eventInfo) {\n    return (\n        <>\n            <b>{eventInfo.timeText}</b>\n            <i>{eventInfo.event.title}</i>\n        </>\n    )\n}\n\nLessonsBlock.contextType = PopUpContext;","import React, { Component } from 'react';\n\nimport parse from 'html-react-parser';\n// import { Link } from 'react-router-dom';\n\nimport GroupService from '../../../../services/group-service';\n\nimport PopUpContext from '../../../context/popup-context';\n\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class ChatBlock extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n        ChatMessages: null,\n        GroupLink: null,\n        CurrentChatPage: 1,\n        TotalChatPages: null,\n        refreshChat: false,\n        UserInputText: \"\",\n        // showingRatingReloadInfo: null //to reload the block\n    }\n\n    componentDidMount() {\n        this.componentDidUpdate();\n        // this.chatInterval = setInterval(() => this.getChatData(this.state.CurrentChatPage), 60000);\n    }\n\n    componentDidUpdate() {\n        const refreshChat = this.props.refreshChat;\n        const link = this.props.link;\n        // if (link !== this.state.GroupLink || showingRating !== this.state.showingRatingReloadInfo) {\n        if (link !== this.state.GroupLink || refreshChat !== this.state.refreshChat) {\n            this.setState({\n                GroupLink: link,\n                refreshChat: refreshChat,\n                UserInputText: \"\",\n                // showingRatingReloadInfo: this.props.showingRating\n            });\n\n            this.getChatData(1);\n        }\n    }\n\n    componentWillUnmount() {\n        // Clear the interval right before component unmount\n        // clearInterval(this.chatInterval);\n    }\n\n    getChatData = (page) => {\n        console.log(\"getChatData page: \" + page);\n\n        this.state.GroupService.getGroupChat(this.props.link, page).then(\n            res => {\n                console.log(res);\n                this.setState({\n                    ChatMessages: res[\"response\"][\"data\"],\n                    CurrentChatPage: res[\"response\"][\"page\"],\n                    TotalChatPages: res[\"response\"][\"totalpages\"],\n                });\n\n                if (res[\"response\"][\"data\"] !== undefined) {\n                    // clearInterval(this.chatInterval);\n                    // this.chatInterval = setInterval(() => this.getChatData(this.state.CurrentChatPage), 60000);\n                } else {\n                    // clearInterval(this.chatInterval);\n                }\n            });\n    }\n\n    sendMessage = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        console.log(formData);\n\n        this.state.GroupService.newMessage(formData).then(\n            res => {\n                console.log(res);\n                this.setState({ UserInputText: \"\" });\n\n                if(document.getElementById(\"userMessageInput1\") !== null){\n                    document.getElementById(\"userMessageInput1\").value = \"\"; \n                }\n\n                if(document.getElementById(\"userMessageInput2\") !== null){\n                    document.getElementById(\"userMessageInput2\").value = \"\"; \n                }\n\n\n                this.getChatData(1);\n                // if (res[\"response\"][\"code\"] === \"100\") {\n                //     // window.location.reload();\n                // } else {\n                //     alert(\"Error! Check console\");\n                // }\n            }\n        );\n    }\n\n    workWithMessage = (msg) => {\n        function urlify(text) {\n            var urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n            return text.replace(urlRegex, function (url) {\n                let prettyURL = url.replace(/(^\\w+:|^)\\/\\//, '');\n                return `<a href=\"${url}\" target=\"_blank\">${prettyURL}</a>`;\n            })\n            // or alternatively\n            // return text.replace(urlRegex, '<a href=\"$1\">$1</a>')\n        }\n\n        function youtube_parser(url) {\n            var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n            var match = url.match(regExp);\n            return (match && match[7].length == 11) ? match[7] : false;\n        }\n\n        function checkImageURL(url) {\n            return (url.match(/\\.(jpeg|jpg|gif|png)$/) != null);\n        }\n\n        let html;\n\n        if (youtube_parser(msg)) { //check if msg is a YouTube video\n            html = `${msg} <br /><br /> <iframe key=\"${youtube_parser(msg)}\" src=\"https://www.youtube.com/embed/${youtube_parser(msg)}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>`;\n        } else {\n            if (checkImageURL(msg)) { //check if msg is Img\n                html = `${msg} <br /><br /> <img src=\"${msg}\" alt=\"${msg}\" />`\n            } else {\n                html = urlify(msg);\n            }\n        }\n\n        html = parse(html);\n        // console.log(html)\n        return html;\n    }\n\n    loadMoreMessages = () => {\n        this.getChatData(parseInt(this.state.CurrentChatPage) + 1);\n    }\n\n    handleInputChange = (e) => {\n        // console.log(e.target.value);\n        this.setState({ UserInputText: e.target.value });\n    }\n\n\n    render() {\n\n        const { ChatMessages, GroupLink, CurrentChatPage, TotalChatPages, UserInputText } = this.state;\n        const { serverUrl } = this.context;\n\n        if (ChatMessages !== null) {\n\n            const ChatMessagesBlock = () => ChatMessages.map((msgData, i, array) => {\n                if (array[i + 1] !== undefined) {\n                    if (array[i].user_id !== array[i + 1].user_id) {\n                        // console.log(array[i].user_id + \" is different from \" + array[i - 1].user_id);\n                        return (\n                            <div className=\"chat-message\" key={msgData.id}>\n                                <img className=\"user-picture\" src={serverUrl + msgData.userData.picture} alt=\"User Pic\" />\n                                <div className=\"message-wrapper\">\n                                    <span className=\"name\">{msgData.userData.name}</span>\n                                    <div className=\"message\" key={\"message\" + msgData.id}>{this.workWithMessage(msgData.message)}</div>\n                                </div>\n                            </div>\n                        );\n                    } else {\n                        return (\n                            <div className=\"chat-message me\" key={msgData.id}>\n                                <div className=\"message-wrapper me\">\n                                    <div className=\"message\" key={\"message\" + msgData.id}>{this.workWithMessage(msgData.message)}</div>\n                                </div>\n                            </div>\n                        );\n                    }\n                } else{\n                    return (\n                        <div className=\"chat-message\" key={msgData.id}>\n                            <img className=\"user-picture\" src={serverUrl + msgData.userData.picture} alt=\"User Pic\" />\n                            <div className=\"message-wrapper\">\n                                <span className=\"name\">{msgData.userData.name}</span>\n                                <div className=\"message\" key={\"message\" + msgData.id}>{this.workWithMessage(msgData.message)}</div>\n                            </div>\n                        </div>\n                    );\n                }\n            }\n            );\n\n            const LoadMoreMessagesButton = (props) => {\n                return (\n                    <span className=\"load-more\" onClick={() => this.loadMoreMessages()}>Show older messages</span>\n                )\n            }\n\n\n            // const MessageInput = (props) => {\n            //     return (\n            //         <div className=\"message-input\">\n            //             <div className=\"wrapper\">\n            //                 <form onSubmit={this.sendMessage}>\n            //                     <input name=\"message\" type=\"text\" placeholder=\"Enter your message...\" autoComplete=\"off\" key=\"userMessageInput3\" onChange={this.handleInputChange} value={UserInputText} />\n            //                     <input name=\"link\" type=\"hidden\" value={GroupLink} />\n            //                     <button type=\"submit\" className=\"send\"></button>\n            //                     {/* <img src=\"/assets/svg/send-message.svg\" className=\"send\" alt=\"Send\" /> */}\n            //                 </form>\n            //             </div>\n            //         </div>\n            //     );\n            // }\n\n            if (ChatMessages !== undefined) {\n                return (\n                    <div className=\"chat\" key=\"chat\">\n                        <div className=\"chat-messages-list\" key=\"chat-messages-list\">\n                            <ChatMessagesBlock key=\"ChatMessagesBlock\" />\n                            {parseInt(TotalChatPages) !== parseInt(CurrentChatPage) ? <LoadMoreMessagesButton /> : null}\n                        </div>\n\n                        <div className=\"message-input\" key=\"message-input1\">\n                            <div className=\"wrapper\">\n                                <form onSubmit={this.sendMessage}>\n                                    {/* <input name=\"message\" type=\"text\" placeholder=\"Enter your message...\" autoComplete=\"off\" key=\"userMessageInput1\" onChange={this.handleInputChange} value={UserInputText} /> */}\n                                    <input name=\"message\" type=\"text\" placeholder=\"Enter your message...\" autoComplete=\"off\" id=\"userMessageInput1\" key=\"userMessageInput1\" />\n                                    <input name=\"link\" type=\"hidden\" value={GroupLink} />\n                                    <button type=\"submit\" className=\"send\"></button>\n                                </form>\n                            </div>\n                        </div>\n                        {/* <MessageInput /> */}\n                    </div>\n                );\n            } else {\n                return (\n                    <div className=\"widget_info chat\">\n                        {/* <span>Be the first one to leave a message... </span> */}\n                        <div className=\"info-message\">\n                            <img className=\"info-illustration\" src=\"/assets/illustration/plane.svg\" alt=\"Plane\" />\n                            <span>Be the first one<br /> to leave a message!</span>\n                        </div>\n\n                        <div className=\"message-input\" key=\"message-input2\">\n                            <div className=\"wrapper\">\n                                <form onSubmit={this.sendMessage}>\n                                    {/* <input name=\"message\" type=\"text\" placeholder=\"Enter your message...\" autoComplete=\"off\" key=\"userMessageInput2\" onChange={this.handleInputChange} value={UserInputText} /> */}\n                                    <input name=\"message\" type=\"text\" placeholder=\"Enter your message...\" autoComplete=\"off\" id=\"userMessageInput2\" key=\"userMessageInput2\" />\n                                    <input name=\"link\" type=\"hidden\" value={GroupLink} />\n                                    <button type=\"submit\" className=\"send\"></button>\n                                </form>\n                            </div>\n                        </div>\n                        {/* <MessageInput /> */}\n                    </div>\n                );\n            }\n        } else {\n            return (\n                <p>Loading...</p>\n            );\n        }\n    }\n}\n\nChatBlock.contextType = PopUpContext;","import TopMenu from './top-menu';\n\nexport default TopMenu;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './top-menu.css';\n\nclass TopMenu extends Component {\n\n    /* \n    Needs Changes 🤷‍♂️\n    Using CSS position: absolute;\n    Can't update the Admin/User/Page state without refreshing other elements...\n    This is a temporary decision\n    */\n\n    state = {\n        currentMenuGroup: null\n    }\n\n    render() {\n        const { currentGroupLink, isAdmin } = this.props;\n\n        return (\n            <div className=\"top-menu-absolute\">\n                {isAdmin ? (\n                    <div className=\"top-menu\">\n                        <Link to={\"/class/\" + currentGroupLink}><span>Main</span></Link>\n                        <Link to={\"/admin/settings/\" + currentGroupLink}><span>Class settings</span></Link>\n                        <Link to={\"/admin/manage-members/\" + currentGroupLink}><span>Users</span></Link>\n                        <Link to={\"/tasks/\" + currentGroupLink}><span>Tasks</span></Link>\n                    </div>\n                ) : (\n                        <div className=\"top-menu\">\n                            <Link to={\"/class/\" + currentGroupLink}><span>Main</span></Link>\n                            <Link to={\"/tasks/\" + currentGroupLink}><span>Tasks</span></Link>\n                        </div>\n                    )}\n            </div>\n        );\n    }\n}\n\n\nexport default TopMenu;","import MobileMenu from './mobile-menu';\n\nexport default MobileMenu;","import React, { Component } from 'react';\nimport './mobile-menu.css';\n\n// import { BrowserRouter, NavLink, Nav, Link } from 'react-router-dom';\nimport { NavLink, Link } from 'react-router-dom';\n\nimport { HashLink } from 'react-router-hash-link';\n\n// import GroupService from '../../services/group-service';\n\nclass MobileMenu extends Component {\n\n    state = {\n        // GroupService: new GroupService(),\n    }\n\n\n    render() {\n        const { handlePopUpContent } = this.props;\n\n        const scrollWithOffset = (el, offset) => {\n            const elementPosition = el.offsetTop - offset;\n            window.scroll({\n              top: elementPosition,\n              left: 0,\n              behavior: \"smooth\"\n            });  \n        }\n\n        return (\n            <div className=\"mobile-menu\">\n                <div className=\"menu-link\">\n                    <HashLink smooth to=\"#home\" scroll={el => scrollWithOffset(el, 150)}>\n                        {/* <img src=\"/assets/svg/mobile-home.svg\" alt=\"Home\"/> */}\n                        <div className=\"img home\"></div>\n                        <span>Home</span>\n                    </HashLink>\n                </div>\n                <div className=\"menu-link\">\n                    <HashLink smooth to=\"#tasks\" scroll={el => scrollWithOffset(el, 50)}>\n                        {/* <img src=\"/assets/svg/mobile-tasks.svg\" alt=\"Tasks\"/> */}\n                        <div className=\"img tasks\"></div>\n                        <span>Tasks</span>\n                    </HashLink>\n                </div>\n                <div className=\"menu-link\">\n                    <HashLink to=\"#rating\" scroll={el => scrollWithOffset(el, 50)}>\n                        {/* <img src=\"/assets/svg/mobile-rating.svg\" alt=\"Rating\"/> */}\n                        <div className=\"img rating\"></div>\n                        <span>Rating</span>\n                    </HashLink>\n                </div>\n                <div className=\"menu-link\">\n                    <HashLink to=\"#chat\">\n                        {/* <img src=\"/assets/svg/mobile-chat.svg\" alt=\"Chat\"/> */}\n                        <div className=\"img chat\"></div>\n                        <span>Chat</span>\n                    </HashLink>\n                </div>\n                <div className=\"menu-link\">\n                    <HashLink to=\"#files\" scroll={el => scrollWithOffset(el, 50)}>\n                        {/* <img src=\"/assets/svg/mobile-files.svg\" alt=\"Files\"/> */}\n                        <div className=\"img files\"></div>\n                        <span>Files</span>\n                    </HashLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MobileMenu;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './group-page.css';\n\nimport GroupService from '../../../services/group-service';\n\nimport PopUpContext from '../../context/popup-context';\n\nimport ClockBlock from './home-blocks/clock-block';\nimport TasksBlock from './home-blocks/tasks-block';\nimport RatingBlock from './home-blocks/rating-block';\nimport FilesBlock from './home-blocks/files-block';\nimport LessonsBlock from './home-blocks/lessons-block';\nimport ChatBlock from './home-blocks/chat-block';\n\nimport TopMenu from '../../top-menu';\n\nimport MobileMenu from '../../mobile-menu';\n\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class GroupPage extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n        GroupLink: null,\n        GroupInfo: null,\n        UserRole: null,\n        showingGroupMenu: false,\n        showingRating: null,\n        refreshChat: false,\n    }\n\n\n    componentDidMount() {\n        this.componentDidUpdate();\n    }\n\n    componentDidUpdate() {\n        let link = this.props.match.params.link;\n        if (this.state.GroupLink !== link) {\n            console.log(\"Update\")\n            this.setState({\n                GroupLink: link,\n                showingGroupMenu: false\n            });\n\n            // if (this.context.currentGroupLink !== link) {\n            //     this.context.updateCurrentGroupLink(link);\n            // }\n\n            this.state.GroupService.getGroupData(link).then(\n                res => {\n                    console.log(res);\n                    if (res[\"response\"]) {\n                        this.state.GroupService.getRole(link).then(\n                            roleRes => {\n                                // console.log(roleRes);\n                                this.setState({\n                                    UserRole: roleRes[\"response\"],\n                                    // GroupInfo: res[\"response\"][0]\n                                });\n                                this.setState({\n                                    GroupInfo: res[\"response\"][0]\n                                });\n                            });\n                    } else {\n                        console.log(\"Not found\");\n                        window.location = \"/\";\n                    }\n                }\n            );\n        }\n    }\n\n\n    showHideGroupMenu = () => {\n        this.setState({\n            showingGroupMenu: !this.state.showingGroupMenu\n        });\n    }\n\n\n    hideGroupRating = () => {\n        let link = this.props.match.params.link;\n        this.state.GroupService.hideGroupRating(link).then(\n            res => {\n                console.log(res);\n                // window.location.reload();\n                this.setState({\n                    showingRating: false, //just to refresh the block\n                })\n            });\n    }\n\n    showGroupRating = () => {\n        let link = this.props.match.params.link;\n        this.state.GroupService.showGroupRating(link).then(\n            res => {\n                console.log(res);\n                this.setState({\n                    showingRating: true, //just to refresh the block\n                })\n            });\n    }\n\n    refreshChat = () => {\n            this.setState({\n                refreshChat: !this.state.refreshChat,\n            });\n    }\n\n\n    render() {\n\n        const { GroupInfo, UserRole, GroupLink, showingGroupMenu, showingRating, refreshChat } = this.state;\n\n        const { handlePopUpContent, serverUrl } = this.context;\n\n        // console.log(\"GroupLink: \" + GroupLink);\n        // console.log(\"UserRole: \" + UserRole);\n\n        console.log(showingGroupMenu);\n\n        if (GroupInfo !== null) {\n            return (\n                <React.Fragment>\n                    {UserRole === \"admin\" ? <TopMenu currentGroupLink={GroupLink} isAdmin /> : <TopMenu currentGroupLink={GroupLink} />}\n\n                    <div className=\"grouppage\" id=\"home\">\n                        {showingGroupMenu ? <div className=\"groupmenu_clicker_overlay\" onClick={this.showHideGroupMenu}></div> : null}\n\n                        <ClockBlock />\n\n                        <div className=\"page_heading\">\n                            {GroupInfo.name} {UserRole === \"admin\" ? <Link to={\"/admin/settings/\" + GroupLink}><img className=\"settings_icon\" src=\"/assets/svg/settings.svg\" alt=\"Settings\" /></Link> : (\n                                <div className=\"actions_block\">\n                                    <img className=\"more_icon\" onClick={this.showHideGroupMenu} src=\"/assets/svg/more.svg\" alt=\"More\" />\n                                    {showingGroupMenu ? <div className=\"group-menu\" onClick={() => handlePopUpContent(\"leaveGroup\", { smallPopUp: true, GroupLink: GroupLink })}>Leave class</div> : null}\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"school_name\">\n                            <img src={serverUrl + GroupInfo.picture} alt={GroupInfo.school_name} />\n                            {GroupInfo.school_name}\n                        </div>\n\n                        <div className=\"grouppage_blocks\">\n\n                            <div className=\"block tasks_block\" id=\"tasks\">\n                                <div className=\"block_heading\">\n                                    Tasks {UserRole === \"admin\" || UserRole === \"teacher\" ? <React.Fragment> <img onClick={() => handlePopUpContent(\"newTask\", GroupLink)} className=\"plus_icon\" src=\"/assets/svg/+.svg\" alt=\"+\" /> <Link className=\"icon_link\" to={\"/tasks/\" + GroupLink}><img className=\"settings_block_icon\" src=\"/assets/svg/settings.svg\" alt=\"Settings\" /> </Link></React.Fragment> : <Link className=\"icon-link\" to={\"/tasks/\" + GroupLink}><img className=\"forward_icon\" src=\"/assets/svg/forward.svg\" alt=\"Forward\" /> </Link>}\n                                </div>\n                                <div className=\"widget_box\">\n\n                                    <TasksBlock link={GroupLink} />\n\n                                    <div className=\"gradient\"></div>\n                                </div>\n                            </div>\n\n                            <div className=\"block\">\n                                <div className=\"block_heading\">\n                                    Lessons {UserRole === \"admin\" || UserRole === \"teacher\" ? <Link className=\"icon_link\" to={\"/admin/manage-lessons/\" + GroupLink}><img className=\"settings_block_icon\" src=\"/assets/svg/settings.svg\" alt=\"Settings\" /> </Link> : null}\n                                </div>\n                                <div className=\"widget_box calendar\">\n                                    <LessonsBlock link={GroupLink} />\n                                </div>\n                            </div>\n\n                        </div>\n                        <div className=\"grouppage_blocks second\">\n\n                            <div className=\"block\" id=\"rating\">\n                                <div className=\"block_heading\">\n                                    Rating {UserRole === \"admin\" || UserRole === \"teacher\" ? <RatingAdminAction hideGroupRating={this.hideGroupRating} showGroupRating={this.showGroupRating} /> : null} {UserRole === \"admin\" || UserRole === \"teacher\" ? <Link className=\"icon_link\" to={\"/admin/manage-members/\" + GroupLink}><img className=\"settings_block_icon\" src=\"/assets/svg/settings.svg\" alt=\"Settings\" /> </Link> : null}\n                                </div>\n                                <div className=\"widget_box bottom_scroll_box\">\n                                    <RatingBlock link={GroupLink} showingRating={this.state.showingRating} />\n                                    <div className=\"bottom-gradient\"></div>\n                                </div>\n                            </div>\n\n                            <div className=\"block\" id=\"files\">\n                                <div className=\"block_heading\">\n                                    Attachments {UserRole === \"admin\" || UserRole === \"teacher\" ? <img onClick={() => handlePopUpContent(\"newFile\", GroupLink)} className=\"plus_icon\" src=\"/assets/svg/+.svg\" alt=\"+\" /> : null}\n                                </div>\n                                <div className=\"widget_box bottom_scroll_box\">\n                                    <FilesBlock link={GroupLink} />\n                                    <div className=\"bottom-gradient\"></div>\n                                </div>\n                            </div>\n\n                            <div className=\"block\" id=\"chat\">\n                                <div className=\"block_heading\">\n                                    Chat <img className=\"refresh_icon\" onClick={() => this.refreshChat()} src=\"/assets/svg/refresh.svg\" alt=\"Refresh\" />\n                                </div>\n                                <div className=\"widget_box chat\">\n                                    <ChatBlock link={GroupLink} refreshChat={refreshChat} />\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <MobileMenu />\n                </React.Fragment>\n            );\n\n            function RatingAdminAction(props) {\n                if (showingRating === null) {\n                    if (GroupInfo.rating === 1) {\n                        return <img onClick={props.hideGroupRating} className=\"plus_icon\" src=\"/assets/svg/eye.svg\" alt=\"Show\" />;\n                    } else {\n                        return <img onClick={props.showGroupRating} className=\"plus_icon\" src=\"/assets/svg/eye-hide.svg\" alt=\"Hide\" />;\n                    }\n                } else {\n                    if (showingRating) {\n                        return <img onClick={props.hideGroupRating} className=\"plus_icon\" src=\"/assets/svg/eye.svg\" alt=\"Show\" />;\n                    } else {\n                        return <img onClick={props.showGroupRating} className=\"plus_icon\" src=\"/assets/svg/eye-hide.svg\" alt=\"Hide\" />;\n                    }\n                }\n            }\n        } else {\n            return (\n                <div className=\"grouppage\">\n                    {/* Loading... */}\n                </div>\n            );\n        }\n    }\n}\n\nGroupPage.contextType = PopUpContext;","import GroupPage from './group-page';\n\nexport default GroupPage;","import MobileMenuTask from './mobile-menu-task';\n\nexport default MobileMenuTask;","import React, { Component } from 'react';\nimport '../mobile-menu/mobile-menu.css';\n\n// import { BrowserRouter, NavLink, Nav, Link } from 'react-router-dom';\nimport { NavLink, Link } from 'react-router-dom';\n\nimport { HashLink } from 'react-router-hash-link';\n\n// import GroupService from '../../services/group-service';\n\nclass MobileMenuTask extends Component {\n\n    state = {\n        // GroupService: new GroupService(),\n    }\n\n\n    render() {\n        const { isTeacher } = this.props;\n\n        return (\n            <div className=\"mobile-menu\">\n                <div className=\"menu-link\">\n                    <HashLink smooth to=\"#task-scroll\">\n                        {/* <img src=\"/assets/svg/mobile-home.svg\" alt=\"Home\"/> */}\n                        <div className=\"img tasks\"></div>\n                        <span>Task</span>\n                    </HashLink>\n                </div>\n                <div className=\"menu-link\">\n                    {isTeacher ? (\n                        <HashLink smooth to=\"#yourwork-scroll\">\n                            {/* <img src=\"/assets/svg/mobile-tasks.svg\" alt=\"Tasks\"/> */}\n                            <div className=\"img list\"></div>\n                            <span>Student's work</span>\n                        </HashLink>\n                    ) : (\n                            <HashLink smooth to=\"#yourwork-scroll\">\n                                {/* <img src=\"/assets/svg/mobile-tasks.svg\" alt=\"Tasks\"/> */}\n                                <div className=\"img list\"></div>\n                                <span>Your Work</span>\n                            </HashLink>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MobileMenuTask;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './task-page.css';\nimport TopMenu from '../../top-menu';\n\nimport MobileMenuTask from '../../mobile-menu-task';\nimport TaskService from '../../../services/task-service';\nimport PopUpContext from '../../context/popup-context';\n\n\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class TaskPage extends Component {\n\n    state = {\n        TaskService: new TaskService(),\n        TaskInfo: null,\n        GroupLink: null,\n        UserRole: null,\n        UserHomework: null,\n        TaskFiles: null,\n        MyFiles: null,\n        AllHomeWorks: [],\n    }\n\n\n    componentDidMount() {\n        const taskLink = this.props.match.params.link\n        this.state.TaskService.getSingleTask(taskLink).then(\n            res => {\n                console.log(res);\n                if (res[\"code\"] === undefined) {\n                    this.state.TaskService.getTaskAdminRole(taskLink).then(\n                        resRole => {\n                            console.log(resRole);\n                            this.state.TaskService.getTaskFiles(res[\"response\"][0][\"group_link\"], taskLink).then(\n                                resFiles => {\n                                    console.log(resFiles);\n                                    this.state.TaskService.getSingleHomework(taskLink).then(\n                                        homeworkRes => {\n                                            console.log(homeworkRes);\n                                            this.state.TaskService.getMyFiles(res[\"response\"][0][\"group_link\"], taskLink).then(\n                                                myFilesRes => {\n                                                    console.log(myFilesRes);\n                                                    this.setState({\n                                                        UserHomework: homeworkRes[\"response\"][0],\n                                                        UserRole: resRole[\"response\"],\n                                                        TaskInfo: res[\"response\"][0],\n                                                        TaskFiles: resFiles[\"response\"],\n                                                        MyFiles: myFilesRes[\"response\"],\n                                                        GroupLink: res[\"response\"][0][\"group_link\"],\n                                                    });\n                                                });\n                                        });\n                                });\n                        });\n                } else {\n                    window.location = \"/\";\n                }\n            });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.UserRole === \"admin\" || this.state.UserRole === \"teacher\") {\n            if (prevState.AllHomeWorks === this.state.AllHomeWorks) {\n                this.state.TaskService.getAllHomework(this.state.TaskInfo.task_link, this.state.TaskInfo.group_link).then(\n                    res => {\n                        console.log(res);\n                        this.setState({\n                            AllHomeWorks: res[\"response\"]\n                        });\n                    }\n                );\n            }\n        }\n    }\n\n\n    onNewHomework = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        console.log(formData);\n\n        this.state.TaskService.newHomework(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    window.location.reload();\n                } else {\n                    alert(\"Error! Check console\");\n                }\n            }\n        );\n    }\n\n    deleteTaskFileAdmin = (fileId) => {\n        this.state.TaskService.deleteTaskFileAdmin(fileId, this.state.TaskInfo.group_link).then(\n            res => {\n                console.log(res);\n                window.location.reload();\n            }\n        );\n    }\n\n\n    deleteMyTaskFile = (fileId) => {\n        this.state.TaskService.deleteMyTaskFile(fileId, this.state.TaskInfo.group_link).then(\n            res => {\n                console.log(res);\n                window.location.reload();\n            }\n        );\n    }\n\n    render() {\n\n        const { TaskInfo, UserRole, UserHomework, AllHomeWorks, TaskFiles, MyFiles, GroupLink } = this.state;\n\n        // console.log(AllHomeWorks);\n        console.log(MyFiles)\n\n        const { handlePopUpContent, reformatDate, serverUrl } = this.context;\n\n        let userData = localStorage.getItem(\"user\");\n        userData = JSON.parse(userData);\n        // console.log(userData);\n        const userIcon = serverUrl + userData[\"response\"][0][\"picture\"];\n        const userName = userData[\"response\"][0][\"name\"];\n\n\n        const userElements = {\n            display: UserRole === \"student\" ? 'block' : 'none',\n        }\n\n        const adminElements = {\n            display: UserRole === \"admin\" || UserRole === \"teacher\" ? 'block' : 'none',\n        }\n            ;\n\n        if (TaskInfo !== null) {\n\n            const TaskNewFiles = () => {\n                return (\n                    <div className=\"files-block\">\n                        <h4>Attached files:</h4>\n                        <div style={adminElements}>\n                            <div className=\"files-action\" onClick={() => handlePopUpContent(\"newTaskFile\", { taskLink: TaskInfo.task_link, currentGroupLink: TaskInfo.group_link })}>\n                                <img src={\"/assets/svg/pin.svg\"} alt=\"Attach\" />\n                                Attach new file\n                        </div>\n                        </div>\n                    </div>\n                )\n            }\n\n            const TaskFilesBlock = () => TaskFiles.map((file) =>\n                <div key={file.id} className=\"file-line\">\n                    <span className=\"name\">{file.file_name}</span>\n                    <div className=\"right-side\">\n                        <span className=\"type\">{file.type}</span>\n                        <a target='_blank' rel=\"noopener noreferrer\" href={file.file_link}><img src=\"/assets/svg/download.svg\" alt=\"Open\" /></a>\n                        <img style={adminElements} onClick={() => this.deleteTaskFileAdmin(file.id)} className=\"delete\" src={\"/assets/svg/x.svg\"} alt=\"Delete\" />\n                    </div>\n                </div>\n            );\n\n            const MyTaskNewFiles = () => {\n                return (\n                    <div className=\"files-block user\" style={userElements}>\n                        <h4>Attached files:</h4>\n                        <div className=\"files-action\" onClick={() => handlePopUpContent(\"newTaskFile\", { taskLink: TaskInfo.task_link, currentGroupLink: TaskInfo.group_link })}>\n                            <img src={\"/assets/svg/pin.svg\"} alt=\"Attach\" />\n                            Attach new file\n                        </div>\n                    </div>\n                )\n            }\n\n            const MyTasksFilesBlock = () => MyFiles.map((file) =>\n                <div key={file.id} className=\"file-line\">\n                    <span className=\"name\">{file.file_name}</span>\n                    <div className=\"right-side\">\n                        <span className=\"type\">{file.type}</span>\n                        <a target='_blank' rel=\"noopener noreferrer\" href={file.file_link}><img src=\"/assets/svg/download.svg\" alt=\"Open\" /></a>\n                        <img onClick={() => this.deleteMyTaskFile(file.id)} className=\"delete\" src={\"/assets/svg/x.svg\"} alt=\"Delete\" />\n                    </div>\n                </div>\n            );\n\n            let StatusBlock;\n\n            if (UserHomework) {\n                switch (UserHomework.status) {\n                    case \"open\":\n                        StatusBlock = () => <div className=\"task_status blue\">Sent</div>\n                        break;\n                    case \"checked\":\n                        StatusBlock = () => <div className=\"task_status green\">Done</div>\n                        break;\n                }\n            } else {\n                StatusBlock = () => <div className=\"task_status red\">To be done</div>\n            }\n\n\n            const AllHomeWorksBlock = () => AllHomeWorks.map((hwork) =>\n                <Link to={\"/admin/homework/\" + hwork.homework_link} key={hwork.homework_link} className=\"link-wrapper\">\n                    <div key={hwork.homework_link} className=\"homework-link\">\n                        <div className=\"user-part\">\n                            <img src={serverUrl + hwork.user.picture} alt=\"User Pic\" />\n                            <span>{hwork.user.name}</span>\n                        </div>\n                        <div className=\"info-action-part\">\n                            {hwork.status === \"open\" ? <span className=\"green\">Not checked</span> : null}\n                            {hwork.status === \"checked\" ? <span>{hwork.teacher_mark}/{TaskInfo.max_mark}</span> : null}\n                            <Link to={\"/admin/homework/\" + hwork.homework_link} className=\"action\">Open</Link>\n                        </div>\n                    </div>\n                </Link>\n            )\n\n            return (\n                <React.Fragment>\n                   {UserRole === \"admin\" ? <TopMenu currentGroupLink={GroupLink} isAdmin /> : <TopMenu currentGroupLink={GroupLink} /> }\n\n                    <div className=\"goback_button\" onClick={() => window.history.back()}>\n                        <img className=\"back_icon\" src=\"/assets/svg/back.svg\" alt=\"Back\" />\n                        Go back\n                    </div>\n\n                    <div className=\"taskpage action-space\">\n                        <div className=\"page_heading\" id=\"task-scroll\">Task {UserRole === \"admin\" || UserRole === \"teacher\" ? <img onClick={() => handlePopUpContent(\"editTask\", TaskInfo.task_link)} className=\"edit_task_icon\" src=\"/assets/svg/edit.svg\" alt=\"Edit Task\" /> : null}</div>\n            {UserRole === \"admin\" || UserRole === \"teacher\" ? <div className=\"task_status blue\">The work has been sent by {AllHomeWorks.length} student(s)</div> : <StatusBlock />}\n                        <div className=\"wrapper\">\n                            <div className=\"side-l\">\n                                <div className=\"task_heading\">\n                                    <div className={\"task_circle small_circle \" + TaskInfo.color}></div>\n                                    {TaskInfo.name}\n                                </div>\n                                <div className=\"task_deadline\">\n                                    Untill {reformatDate(TaskInfo.deadline.substr(0, 10))}\n                                </div>\n                                <div className=\"task_description\">\n                                    {TaskInfo.comment}\n                                </div>\n                                <div style={userElements}>\n                                    <TaskNewFiles />\n                                    {TaskFiles ? <div className=\"files-list\"><TaskFilesBlock /></div> : <p className=\"files-message\">Teacher hasn't attached any files yet...</p>}\n                                </div>\n                            </div>\n\n                            <div className=\"side-r\" style={userElements}>\n                                {UserHomework ? (\n                                    <React.Fragment>\n                                        <div className=\"task_heading\" id=\"yourwork-scroll\">Your work</div>\n                                        {MyFiles ? (\n                                            <div className=\"task_deadline\">Mark {UserHomework.teacher_mark}/{TaskInfo.max_mark}</div>\n                                        ) : (\n                                                <div className=\"homework-info-line\">\n                                                    <div className=\"blue\">Step 2/2</div>\n                                                    <div className=\"gray\">Mark 0/{TaskInfo.max_mark}</div>\n                                                </div>\n                                            )}\n                                        {/* <div className=\"task_deadline\">Mark {UserHomework.teacher_mark}/{TaskInfo.max_mark}</div> */}\n                                        <div className=\"homework-post\">\n                                            <img src={userIcon} alt=\"User Pic\" />\n                                            <div className=\"user-text\">\n                                                <span>{userName}</span>\n                                                <p>{UserHomework.comment}</p>\n                                            </div>\n                                        </div>\n\n                                        {UserRole === \"student\" && UserHomework.teacher_message ? (\n                                            <div className=\"homework-post\">\n                                                <img src={serverUrl + UserHomework.teachers.teacherMessageSender.picture} />\n                                                <div className=\"user-text\">\n                                                    <span>{UserHomework.teachers.teacherMessageSender.name}</span>\n                                                    <p>{UserHomework.teacher_message}</p>\n                                                </div>\n                                            </div>\n                                        ) : null}\n\n                                        {UserRole === \"student\" && UserHomework.teacher_comment ? (\n                                            <div className=\"homework-post\">\n                                                <img src={serverUrl + UserHomework.teachers.teacherCommentSender.picture} />\n                                                <div className=\"user-text\">\n                                                    <span>{UserHomework.teachers.teacherCommentSender.name}</span>\n                                                    <p>{UserHomework.teacher_comment}</p>\n                                                </div>\n                                            </div>\n                                        ) : null}\n                                        {/* <div className=\"step\">Step 2/2</div> */}\n                                        <MyTaskNewFiles />\n                                        {MyFiles ? <div className=\"files-list\"><MyTasksFilesBlock /></div> : <div className=\"step margin\">Attach files to continue...</div>}\n                                        <br /><br />\n                                        {MyFiles ? <button className=\"main gray send-work\">Already Sent</button> : <button className=\"main gray send-work\">Needs Attachment</button>}\n                                    </React.Fragment>\n                                ) : (\n                                        <form onSubmit={this.onNewHomework}>\n                                            <div className=\"task_heading\">Send your work</div>\n                                            <div className=\"homework-info-line\">\n                                                <div className=\"blue\">Step 1/2</div>\n                                                <div className=\"gray\">Mark 0/{TaskInfo.max_mark}</div>\n                                            </div>\n                                            {/* <div className=\"task_deadline\">Mark 0/{TaskInfo.max_mark}</div>\n                                            <div className=\"step\">Step 1/2</div> */}\n                                            <textarea name=\"comment\" className=\"work\" placeholder=\"Attach a comment to your work...\"></textarea>\n                                            <input type=\"hidden\" name=\"taskLink\" value={TaskInfo.task_link} />\n                                            <br /><br />\n                                            <button type=\"submit\" className=\"main send-work\">Next</button>\n                                        </form>\n                                    )}\n                            </div>\n\n                            <div className=\"side-r\" style={adminElements}>\n                                <TaskNewFiles />\n                                {TaskFiles ? <div className=\"files-list\"><TaskFilesBlock /></div> : <p className=\"files-message-admin\">You haven't attached any files yet...</p>}\n                            </div>\n                        </div>\n\n                        <div className=\"homeworks-all\" style={adminElements}>\n                            <div className=\"blue-heading\">Students homework</div>\n                            {AllHomeWorks ? <AllHomeWorksBlock /> : \"No homeworks yet...\"}\n                        </div>\n                    </div>\n                   {UserRole === \"admin\" || UserRole === \"teacher\" ? <MobileMenuTask isTeacher=\"true\" /> : <MobileMenuTask />} \n                </React.Fragment>\n            );\n        } else {\n            return (\n                <div className=\"grouppage\">\n                    {/* Loading... */}\n                </div>\n            );\n        }\n    }\n}\n\nTaskPage.contextType = PopUpContext;","import TaskPage from './task-page';\n\nexport default TaskPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './all-tasks-page.css';\n\nimport TopMenu from '../../top-menu';\n\nimport TaskService from '../../../services/task-service';\nimport GroupService from '../../../services/group-service';\n\nimport PopUpContext from '../../context/popup-context';\n\n\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class TaskPage extends Component {\n\n    state = {\n        TaskService: new TaskService(),\n        GroupService: new GroupService(),\n        UserRole: null,\n        GroupInfo: null,\n        GroupLink: null,\n        TasksList: null,\n        UnDoneTasks: null\n    }\n\n    componentDidMount() {\n        const groupLink = this.props.match.params.link;\n\n        // if (this.context.currentGroupLink !== groupLink) {\n        //     this.context.updateCurrentGroupLink(groupLink);\n        // }\n\n        this.state.GroupService.getGroupData(groupLink).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"] !== false ) {\n                    this.state.TaskService.getTasksWithMyHomework(groupLink).then(\n                        taskRes => {\n                            console.log(taskRes[\"response\"]);\n\n                            this.state.TaskService.getAdminRole(groupLink).then(\n                                roleRes => {\n                                    console.log(roleRes);\n                                    this.setState({\n                                        GroupInfo: res[\"response\"][0],\n                                        TasksList: taskRes[\"response\"],\n                                        UserRole: roleRes[\"response\"],\n                                        GroupLink: res[\"response\"][0][\"link\"]\n                                    });\n                                });\n                            // this.setState({\n                            //                 GroupInfo: res[\"response\"][0],\n                            //                 TasksList: taskRes[\"response\"]\n                            //             });\n                        });\n                } else {\n                    window.location = \"/\";\n                }\n            });\n\n    }\n\n    componentDidUpdate(){\n        console.log(\"Update\");\n\n        const { TasksList, UnDoneTasks } = this.state;\n\n        if(UnDoneTasks === null){\n            if(TasksList){\n            const unDone = TasksList.filter(task => task.homework === undefined);\n\n            this.setState({\n                UnDoneTasks: unDone.length\n            })\n        } else {\n            this.setState({\n                UnDoneTasks: 0\n            })\n        }\n        }\n    }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     if (this.state.UserRole === \"admin\") {\n    //         if (prevState.AllHomeWorks === this.state.AllHomeWorks) {\n    //             this.state.TaskService.getAllHomework(this.state.TaskInfo.task_link, this.state.TaskInfo.group_link).then(\n    //                 res => {\n    //                     console.log(res);\n    //                     this.setState({\n    //                         AllHomeWorks: res[\"response\"]\n    //                     });\n    //                 }\n    //             );\n    //         }\n    //     }\n    // }\n\n\n    render() {\n\n        const { GroupInfo, UserRole, TasksList, UnDoneTasks, GroupLink } = this.state;\n\n        const { reformatDate } = this.context;\n\n        const userElements = {\n            display: UserRole === \"student\" ? 'block' : 'none'\n        }\n\n        const adminElements = {\n            display: UserRole === \"admin\" || UserRole === \"teacher\" ? 'block' : 'none'\n        }\n\n\n        if (GroupInfo !== null) {\n\n            // console.log(GroupInfo);\n\n            const TaskStatusOptions = (status) => {\n                switch(status){\n                    case \"open\":\n                        return <div style={userElements} className=\"td status blue\">Sent</div>\n                    case \"checked\":\n                        return <div style={userElements} className=\"td status green\">Done</div>\n                }\n            }\n\n            const TaskStatusOptionsMobile = (status) => {\n                switch(status){\n                    case \"open\":\n                        return <div style={userElements} className=\"td status-m blue\">Sent</div>\n                    case \"checked\":\n                        return <div style={userElements} className=\"td status-m green\">Done</div>\n                }\n            }\n\n            const AllTasksBlock = () => TasksList.map((task) =>\n                <Link to={\"/task/\" + task.task_link} key={task.task_link}>\n                <div className={\"tasks-row \" + task.color}>\n                    <div className=\"td name\">{task.name}</div>\n                    {/* <div className=\"table_space\" style={adminElements}></div> */}\n                    <div className=\"td topic\">{task.topic}</div>\n                    <div className=\"td deadline\">{reformatDate(task.deadline.substr(0, 10))}</div>\n                    {task.homework ? TaskStatusOptions(task.homework.status) : <div style={userElements} className=\"td status red\"> Not sent </div> } \n                    {task.homework ? <div style={userElements} className=\"td mark\">{task.homework.teacher_mark}</div> : <div style={userElements} className=\"td mark\"> — </div> } \n                    <div className=\"table_space\" style={adminElements}></div>\n                    <div className=\"td published\">{reformatDate(task.created_date.substr(0, 10))}</div>\n\n        {task.homework ? TaskStatusOptionsMobile(task.homework.status) : <div className=\"td published-m\">{reformatDate(task.created_date.substr(0, 10))}</div> }\n                    <div className=\"td short_description_mobile\">{task.comment.substr(0, 50)}</div>\n                </div>\n                </Link>\n            )\n\n\n            const ErrorScreen = (props) => {\n                return(\n                    <div className=\"error-screen\">\n                        <img src=\"/assets/illustration/desk.svg\" alt=\"Desk\" />\n                        <p>The teacher hasn't posted any tasks yet. You can rest!</p>\n                    </div>\n                );\n            }\n\n            return (\n                <React.Fragment>\n                    {UserRole === \"admin\" ? <TopMenu currentGroupLink={GroupLink} isAdmin /> : <TopMenu currentGroupLink={GroupLink} /> }\n\n                    <div className=\"goback_button\" onClick={() => window.history.back()}>\n                        <img className=\"back_icon\" src=\"/assets/svg/back.svg\" alt=\"Back\" />\n                        Go back\n                    </div>\n                    \n                    <div className=\"alltasks-page action-space\">\n                        <div className=\"page_heading\">Tasks</div>\n                        {UnDoneTasks ? <div className=\"undone\" style={userElements}>Undone tasks: {UnDoneTasks}</div> : null}\n                        <div className=\"tasks-column-names\">\n                            <span>Name</span>\n                            {/* <div className=\"table_space\" style={adminElements}></div> */}\n                            <span>Topic</span>\n                            <span>Deadline</span>\n                            <span style={userElements}>Status</span>\n                            <span style={userElements}>Mark</span>\n                            <div className=\"table_space\" style={adminElements}></div>\n                            <span>Created</span>\n                        </div>\n                        <div className=\"tasks-column-rows\">\n                        {TasksList ? <AllTasksBlock /> : <ErrorScreen />}\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <div className=\"grouppage\">\n                    {/* Loading... */}\n                </div>\n            );\n        }\n    }\n}\n\nTaskPage.contextType = PopUpContext;","import AllTasksPage from './all-tasks-page';\n\nexport default AllTasksPage;","import React, { Component } from 'react';\n\nimport './admin.css';\nimport TopMenu from '../../top-menu';\n\nimport GroupService from '../../../services/group-service';\nimport PopUpContext from '../../context/popup-context';\n\n\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class GroupSettingsPage extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n        GroupLink: null,\n        GroupInfo: null,\n        UserRole: null,\n    }\n\n    componentDidMount() {\n        this.componentDidUpdate()\n    }\n\n    componentDidUpdate() {\n        let link = this.props.match.params.link;\n        if (this.state.GroupLink !== link) {\n            console.log(\"Update\")\n            this.setState({\n                GroupLink: link\n            });\n            this.state.GroupService.getGroupDataAdmin(link).then(\n                res => {\n                    console.log(res);\n                    if (res[\"response\"] !== false) {\n                        this.state.GroupService.getRole(link).then(\n                            roleRes => {\n                                // console.log(roleRes);\n                                if (roleRes[\"response\"] === \"admin\") {\n                                    this.setState({\n                                        UserRole: roleRes[\"response\"]\n                                    });\n                                    this.setState({\n                                        GroupInfo: res[\"response\"][0]\n                                    });\n                                } else {\n                                    window.location = \"/\";\n                                }\n                            }\n                        );\n                        // this.setState({\n                        //     GroupInfo: res[\"response\"][0]\n                        // });\n                    } else {\n                        console.log(\"Not found\");\n                        window.location = \"/\";\n                    }\n                }\n            );\n        }\n    }\n\n    onGroupEdit = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        this.state.GroupService.editGroup(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    // console.log(\"/class/\" + this.state.GroupLink)\n                    window.location = \"/admin/settings/\" + this.state.GroupLink;\n                } else {\n                    alert(res);\n                }\n            }\n        );\n    }\n\n    copyToClipboard = (e) => {\n        this.groupLinkField.select();\n        document.execCommand('copy');\n        // This is just personal preference.\n        // I prefer to not show the whole text area selected.\n        e.target.focus();\n        alert('Copied!');\n      };\n\n\n    render() {\n        const { GroupInfo, UserRole, GroupLink } = this.state;\n        const { handlePopUpContent, serverUrl } = this.context;\n\n        if (GroupInfo !== null) {\n            return (\n                <React.Fragment>\n                    {UserRole === \"admin\" ? <TopMenu currentGroupLink={GroupLink} isAdmin /> : <TopMenu currentGroupLink={GroupLink} /> }\n\n                    <div className=\"goback_button\" onClick={() => window.history.back()}>\n                        <img className=\"back_icon\" src=\"/assets/svg/back.svg\" alt=\"Back\" />\n                        Go back\n                    </div>\n                    <div className=\"group_settings_page action-space\">\n                        <div className=\"page_heading\">Group Settings</div>\n                        <div className=\"profile_picture\">\n                            <span>Group picture</span>\n                            <div className=\"profile_picture_line\">\n                                <img src={serverUrl + GroupInfo.picture} alt=\"Picture\"></img>\n                                <span className=\"upload\" onClick={() => handlePopUpContent(\"groupPicture\", GroupInfo.link)}>Upload group picture</span>\n                            </div>\n                        </div>\n                        <form onSubmit={this.onGroupEdit} className=\"mid-size main_form\">\n                            <div className=\"input_block_section\">\n                                <span>Group name</span>\n                                <input type=\"text\" name=\"name\" defaultValue={GroupInfo.name} required/>\n                            </div>\n                            <div className=\"input_block_section\">\n                                <span>School name</span>\n                                <input type=\"text\" name=\"schoolName\" defaultValue={GroupInfo.school_name} required/>\n                            </div>\n                            <div className=\"input_block_section\">\n                                <span>Invitation pass</span>\n                                <span className=\"info\">(Secret pass that will allow people to join). <br/>Note: Keep it empty to make the group open to anyone.</span>\n                                <input type=\"text\" name=\"code\" defaultValue={GroupInfo.code} />\n                            </div>\n                            <input type=\"hidden\" name=\"link\" value={GroupInfo.link} />\n                            <button className=\"main\" type=\"submit\">Save</button>\n                        </form>\n                        <br/><br/>\n                        <form onSubmit={(e) => e.preventDefault()} className=\"mid-size main_form\">\n                            <div className=\"input_block_section\">\n                                <span>Group ID</span>\n                                <input type=\"text\" defaultValue={GroupInfo.link} readonly=\"readonly\"/>\n                            </div>\n                            <div className=\"input_block_section\">\n                                <span>Invitation link</span>\n                                <input type=\"text\" onClick={this.copyToClipboard} ref={(groupLinkField) => this.groupLinkField = groupLinkField} defaultValue={\"https://dash.jetdesk.app/join/\" + GroupInfo.link} readonly=\"readonly\"/>\n                            </div>\n                        </form> \n                        <br/>\n                        <div className=\"leave\" onClick={() => handlePopUpContent(\"leaveGroup\", { smallPopUp: true, GroupLink: GroupLink })}>Leave group</div>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <div className=\"group_settings_page\">\n                    {/* Loading... */}\n                </div>\n            );\n        }\n    }\n}\n\nGroupSettingsPage.contextType = PopUpContext;","import React, { Component } from 'react';\n\nimport TaskService from '../../../services/task-service';\n\nimport PopUpContext from '../../context/popup-context';\n\n\nimport './admin.css';\n\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class HomeWorkPage extends Component {\n    state = {\n        TaskService: new TaskService(),\n        TaskInfo: null,\n        UserHomework: null,\n        HomeworkFiles: null,\n    }\n\n\n    componentDidMount() {\n        const homeworkLink = this.props.match.params.link\n        this.state.TaskService.getSingleHomeworkAdmin(homeworkLink).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"] !== undefined) {\n                    this.state.TaskService.getSingleTask(res[\"response\"][0][\"task_link\"]).then(\n                        taskRes => {\n                            console.log(taskRes);\n                            this.state.TaskService.getStudentTaskFiles(res[\"response\"][0][\"group_link\"], homeworkLink).then(\n                                homeworkFilesRes => {\n                                    console.log(homeworkFilesRes);\n                                    this.setState({\n                                        TaskInfo: taskRes[\"response\"][0],\n                                        UserHomework: res[\"response\"][0],\n                                        HomeworkFiles: homeworkFilesRes[\"response\"],\n                                    });\n                                }\n                            )\n                        }\n                    )\n                } else {\n                    window.location = \"/\";\n                }\n            });\n    }\n\n\n    onNewHomework = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        console.log(formData);\n\n        this.state.TaskService.newHomework(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    window.location.reload();\n                } else {\n                    alert(\"Error! Check console\");\n                }\n            }\n        );\n    }\n\n    attachTeacherMessage = () => {\n        let comment = document.getElementById(\"teacherComment\").value;\n\n        this.state.TaskService.commentHomeworkAdmin(this.state.UserHomework.homework_link, comment).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    window.location.reload();\n                } else {\n                    alert(\"Error! Check console\");\n                }\n            }\n        )\n    }\n\n    render() {\n\n        const { TaskInfo, UserHomework, HomeworkFiles } = this.state;\n\n        const { handlePopUpContent, serverUrl } = this.context;\n\n        if (TaskInfo !== null) {\n\n            const senderIcon = serverUrl + UserHomework.user.picture;\n            const senderName = UserHomework.user.name;\n\n            const TaskFiles = () => {\n                return (\n                    <h4>Attached files:</h4>\n                )\n            }\n\n            const StudentTaskFiles = () => {\n                return (\n                    <h4>Student files:</h4>\n                )\n            }\n\n            const HomeworkFilesBlock = () => HomeworkFiles.map((file) =>\n                <div key={file.id} className=\"file-line\">\n                    <span className=\"name\">{file.file_name}</span>\n                    <div className=\"right-side\">\n                        <span className=\"type\">{file.type}</span>\n                        <a target='_blank' rel=\"noopener noreferrer\" href={file.file_link}><img src=\"/assets/svg/download.svg\" alt=\"Open\" /></a>\n                    </div>\n                </div>\n            );\n\n            return (\n                <div className=\"taskpage homework\">\n                    <div className=\"page_heading\">Work</div>\n                    <div className=\"header-user-line\">\n                        <img src={senderIcon} alt=\"User Pic\" />\n                        <span>{senderName}</span>\n                    </div>\n                    {/* {UserHomework ? <div className=\"task_status blue\">Sent</div> : <div className=\"task_status red\">To be done</div>} */}\n                    <div className=\"wrapper\">\n                        <div className=\"side-l\">\n                            <div className=\"task_heading\">\n                                <div className={\"task_circle small_circle \" + TaskInfo.color}></div>\n                                {TaskInfo.name}\n                            </div>\n                            <div className=\"task_deadline\">\n                                Untill {TaskInfo.deadline.substr(0, 10)}\n                            </div>\n                            <div className=\"task_description\">\n                                {TaskInfo.comment}\n                            </div>\n                            <TaskFiles />\n                        </div>\n\n                        <div className=\"side-r\">\n                            <div className=\"task_heading\">Student work</div>\n                            <div className=\"task_deadline\">Sent: {UserHomework.created_date.substr(0, 10)}</div>\n                            <div className=\"homework-post\">\n                                <img src={senderIcon} alt=\"User Pic\" />\n                                <div className=\"user-text\">\n                                    <span>{senderName}</span>\n                                    <p>{UserHomework.comment}</p>\n                                </div>\n                            </div>\n\n                            {UserHomework.teacher_message ? (\n                                <div className=\"homework-post\">\n                                    <img src={serverUrl + UserHomework.teachers.teacherMessageSender.picture} />\n                                    <div className=\"user-text\">\n                                        <span>{UserHomework.teachers.teacherMessageSender.name}</span>\n                                        <p>{UserHomework.teacher_message}</p>\n                                    </div>\n                                </div>\n                            ) : null}\n\n                            {UserHomework.teacher_comment ? (\n                                <div className=\"homework-post\">\n                                    <img src={serverUrl + UserHomework.teachers.teacherCommentSender.picture} />\n                                    <div className=\"user-text\">\n                                        <span>{UserHomework.teachers.teacherCommentSender.name}</span>\n                                        <p>{UserHomework.teacher_comment}</p>\n                                    </div>\n                                </div>\n                            ) : null}\n\n                            <div className=\"stroke\"></div>\n                            {UserHomework.teacher_message === null ? (\n                                <div className=\"teacher-comment\">\n                                    <textarea id=\"teacherComment\" name=\"comment\" placeholder=\"Attach a comment...\"></textarea>\n                                    <img onClick={this.attachTeacherMessage} className=\"teacher-comment-button\" src=\"/assets/svg/send.svg\" />\n                                </div>\n                            ) : null}\n                            <StudentTaskFiles />\n                            {HomeworkFiles ? <div className=\"files-list\"><HomeworkFilesBlock /></div> : <p className=\"files-message\">Student hasn't attached any files yet...</p>}\n                            <br /><br />\n                            {UserHomework.teacher_comment ? (\n                                <button className=\"main gray send-work\">Already Rated</button>\n                            ) : (\n                                    <button onClick={() => handlePopUpContent(\"rateHomework\", { task_link: TaskInfo.task_link, homework_link: UserHomework.homework_link, max_mark: TaskInfo.max_mark })} className=\"main send-work\">Rate the work</button>\n                                )}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"grouppage\">\n                    {/* Loading... */}\n                </div>\n            );\n        }\n    }\n}\n\nHomeWorkPage.contextType = PopUpContext;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './../all-tasks/all-tasks-page.css';\nimport './admin.css';\nimport TopMenu from '../../top-menu';\n\nimport GroupService from '../../../services/group-service';\nimport PopUpContext from '../../context/popup-context';\n\n\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class ManageLessonsPage extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n        UserRole: null,\n        GroupInfo: null,\n        GroupLink: null,\n        LessonsList: null,\n    }\n\n    componentDidMount() {\n        const groupLink = this.props.match.params.link;\n        this.state.GroupService.getGroupData(groupLink).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"] !== false) {\n                    this.state.GroupService.getRole(groupLink).then(\n                        roleRes => {\n                            // console.log(roleRes);\n                            if (roleRes[\"response\"] === \"admin\" || roleRes[\"response\"] === \"teacher\") {\n                                this.state.GroupService.getLessons(groupLink).then(\n                                    lessonsRes => {\n                                        console.log(lessonsRes);\n                                        this.setState({\n                                            UserRole: roleRes,\n                                            GroupInfo: res[\"response\"][0],\n                                            LessonsList: lessonsRes[\"response\"],\n                                            GroupLink: res[\"response\"][0][\"link\"],\n                                        });\n                                    });\n                            } else {\n                                window.location = \"/\";\n                            }\n                        });\n                } else {\n                    window.location = \"/\";\n                }\n            });\n\n    }\n\n\n// deleteLesson = (lessonId) => {\n//     this.state.GroupService.deleteLesson(this.state.GroupInfo.link, lessonId).then(\n//         res => {\n//             console.log(res);\n//             window.location.reload();\n//         }\n//     );\n// }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     if (this.state.UserRole === \"admin\") {\n    //         if (prevState.AllHomeWorks === this.state.AllHomeWorks) {\n    //             this.state.TaskService.getAllHomework(this.state.TaskInfo.task_link, this.state.TaskInfo.group_link).then(\n    //                 res => {\n    //                     console.log(res);\n    //                     this.setState({\n    //                         AllHomeWorks: res[\"response\"]\n    //                     });\n    //                 }\n    //             );\n    //         }\n    //     }\n    // }\n\n\n    render() {\n\n        const { GroupInfo, UserRole, LessonsList, GroupLink } = this.state;\n        const { handlePopUpContent, reformatDate } = this.context;\n\n        if (GroupInfo !== null) {\n\n\n            const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n            const AllLessonsBlock = () => LessonsList.map((event) =>\n                <div className=\"tasks-row blue lessons-row\" key={event.id}>\n                    <div className=\"td name\">{event.title}</div>\n                    <div className=\"td delete-action-mobile\">\n                        <img onClick={() => handlePopUpContent(\"deleteLesson\", {smallPopUp: true, link: GroupInfo.link, eventId: event.id})} className=\"delete_icon\" src=\"/assets/svg/delete.svg\" alt=\"Delete\" />\n                    </div>\n                    {/* <div className=\"table_space\" style={adminElements}></div> */}\n                    {event.recurring === 0 ? <div className=\"td pc-line\">{reformatDate(event.eventDate.substr(0, 10))}</div> : <div className=\"td pc-line\">{days[event.days_of_week]}</div>}\n                    <div className=\"td blue-text-mobile\">{event.start_time.substr(0, 5)} {days[event.days_of_week]}</div>\n                    <div className=\"td blue-text\">{event.start_time.substr(0, 5)}</div>\n                    {event.recurring === 0 ? <React.Fragment> <div className=\"td recurring-status pc\">No</div> <div className=\"td recurring-status mobile\">{reformatDate(event.eventDate.substr(0, 10))} </div> </React.Fragment>: <div className=\"td recurring-status\">Weekly</div>}\n                    {/* <div className=\"table_space\"></div> */}\n                    <div className=\"td delete-action-pc\">\n                        <img onClick={() => handlePopUpContent(\"deleteLesson\", {smallPopUp: true, link: GroupInfo.link, eventId: event.id})} className=\"delete_icon\" src=\"/assets/svg/delete.svg\" alt=\"Delete\" />\n                    </div>\n                    <div className=\"td short_description_mobile\">{event.description.substr(0, 100)}</div>\n\n                    {/* {task.homework ? TaskStatusOptions(task.homework.status) : <div style={userElements} className=\"td status red\"> Not sent </div> } \n                {task.homework ? <div style={userElements} className=\"td mark\">{task.homework.teacher_mark}</div> : <div style={userElements} className=\"td mark\"> — </div> } \n                <div className=\"table_space\" style={adminElements}></div>\n                {task.homework ? TaskStatusOptionsMobile(task.homework.status) : <div className=\"td published-m\">{reformatDate(task.created_date.substr(0, 10))}</div> } */}\n                </div>\n            )\n\n            return (\n                <React.Fragment>\n                    {UserRole === \"admin\" ? <TopMenu currentGroupLink={GroupLink} isAdmin /> : <TopMenu currentGroupLink={GroupLink} /> }\n\n                    <div className=\"goback_button\" onClick={() => window.history.back()}>\n                        <img className=\"back_icon\" src=\"/assets/svg/back.svg\" alt=\"Back\" />\n                        Go back\n                    </div>\n\n                    <div className=\"alltasks-page action-space admin-lessons\">\n                        <div className=\"page_heading\">Lessons</div>\n                        <div className=\"tasks-column-names lessons-row\">\n                            <span>Name</span>\n                            <span>Date/Day</span>\n                            <span>Time</span>\n                            <span>Recurring</span>\n                            {/* <div className=\"table_space\"></div>\n                            <span>Action</span> */}\n                        </div>\n                        <div className=\"tasks-column-rows\">\n                            {LessonsList ? <AllLessonsBlock /> : <p className=\"info_message\">No lessons (events) yet...</p>}\n                        </div>\n                    </div>\n\n                    <div className=\"button_new\" onClick={() => handlePopUpContent(\"newLesson\", GroupInfo.link)}>\n                        <img src=\"/assets/svg/blue-plus.svg\" alt=\"New\" />\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <div className=\"grouppage\">\n                    {/* Loading... */}\n                </div>\n            );\n        }\n    }\n}\n\nManageLessonsPage.contextType = PopUpContext;","import React, { Component } from \"react\";\n\nimport './join-class.css';\n\nimport GroupService from '../../../services/group-service';\n\nimport PopUpContext from '../../context/popup-context';\n\nexport default class JoinClassPage extends Component {\n\n    state = {\n        GroupLink: null,\n        GroupService: new GroupService(),\n    }\n\n    componentDidMount() {\n        this.componentDidUpdate();\n    }\n\n    componentDidUpdate() {\n        let link = this.props.match.params.link;\n        if (this.state.GroupLink !== link) {\n            this.setState({\n                GroupLink: link,\n            });\n\n        }\n    }\n\n    onGroupJoin = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n\n        // console.log(e.target);\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n\n        this.state.GroupService.joinGroup(formData).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"][\"code\"] === \"100\") {\n                    window.location = \"/class/\" + res[\"response\"][\"link\"];\n                } else {\n                    // alert(res[\"response\"][\"message\"]);\n                    this.context.updateErrorMessage(res[\"response\"][\"message\"]);\n                    this.context.handlePopUpContent(\"error\");\n                }\n            }\n        );\n    }\n\n    render() {\n\n        const { GroupLink } = this.state;\n\n        return (\n            <div className=\"join-class\">\n                <div className=\"page_heading\">Join group via link</div>\n                <div className=\"two-sides\">\n                    <div className=\"left-page\">\n                        <form onSubmit={this.onGroupJoin}>\n                            <div className=\"margin-top\"></div>\n                            <div className=\"profile_settings_input_block\">\n                                <span>Group ID</span>\n                                <input type=\"text\" defaultValue={GroupLink} readonly=\"readonly\" />\n                            </div>\n                            <div className=\"profile_settings_input_block\">\n                                <span>Enter invitation pass (if required)</span>\n                                <input type=\"text\" name=\"code\" placeholder=\"Invitation pass\" />\n                            </div>\n\n                            <input type=\"hidden\" name=\"link\" defaultValue={GroupLink} />\n                            <div className=\"margin-top-small\"></div>\n                            <div className=\"form_action\">\n                                <button className=\"main\" type=\"submit\">Join</button>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"right-page flex-center\">\n                        <img src=\"/assets/illustration/enter.svg\" className=\"join-illustration\" alt=\"Enter\" />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nJoinClassPage.contextType = PopUpContext;","import JoinClassPage from './join-class';\n\nexport default JoinClassPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './../all-tasks/all-tasks-page.css';\nimport './admin.css';\n\nimport TopMenu from '../../top-menu';\nimport GroupService from '../../../services/group-service';\nimport PopUpContext from '../../context/popup-context';\n\n\n// import { useParams } from \"react-router-dom\";\n\n\nexport default class ManageMembersPage extends Component {\n\n    state = {\n        GroupService: new GroupService(),\n        UserRole: null,\n        GroupInfo: null,\n        GroupLink: null,\n        MembersList: null,\n        TotalMembers: null,\n        CurrentRoleMenu: null,\n    }\n\n    componentDidMount() {\n        const groupLink = this.props.match.params.link;\n        this.state.GroupService.getGroupData(groupLink).then(\n            res => {\n                console.log(res);\n                if (res[\"response\"] !== false) {\n                    this.state.GroupService.getRole(groupLink).then(\n                        roleRes => {\n                            // console.log(roleRes);\n                            if (roleRes[\"response\"] === \"admin\" || roleRes[\"response\"] === \"teacher\") {\n                                this.state.GroupService.getGroupMembersAdmin(groupLink).then(\n                                    membersRes => {\n                                        console.log(membersRes);\n                                        this.setState({\n                                            UserRole: roleRes[\"response\"],\n                                            GroupInfo: res[\"response\"][0],\n                                            MembersList: membersRes[\"response\"][\"allUsers\"],\n                                            TotalMembers: membersRes[\"response\"][\"totalMembers\"],\n                                            GroupLink: res[\"response\"][0][\"link\"],\n                                        });\n                                    });\n                            } else {\n                                window.location = \"/\";\n                            }\n                        });\n                } else {\n                    window.location = \"/\";\n                }\n            });\n\n    }\n\n    showRoleMenu = (num) => {\n        document.getElementById(\"roleMenu\" + num).style.display = \"block\";\n\n        function checkForClick(event) {\n            let isClickInside = document.getElementById(\"roleMenu\" + num).contains(event.target);\n\n            if (!isClickInside) {\n                document.getElementById(\"roleMenu\" + num).style.display = \"none\";\n                document.removeEventListener(\"click\", checkForClick, false);\n            }\n        }\n\n        document.addEventListener('click', checkForClick);\n    }\n\n    setTeacher = (userId) => {\n        this.state.GroupService.setTeacher(this.state.GroupInfo.link, userId).then(\n            res => {\n                console.log(res);\n            if(res[\"response\"][\"code\"] !== \"100\"){\n                    alert(\"To many teachers for this group...\");\n                } else{\n                    window.location.reload(); \n                }\n            });\n    }\n\n    setTeacherToStudent = (userId) => {\n        this.state.GroupService.setTeacherToStudent(this.state.GroupInfo.link, userId).then(\n            res => {\n                console.log(res);\n                window.location.reload();\n            });\n    }\n\n\n\n    render() {\n\n        const { GroupInfo, UserRole, MembersList, TotalMembers, GroupLink } = this.state;\n        const { handlePopUpContent, reformatDate, serverUrl } = this.context;\n\n        if (GroupInfo !== null) {\n\n            const AllMembersBlock = () => MembersList.map((member, key) =>\n                <div className=\"tasks-row members blue members-row\" key={key}>\n                    <div className=\"td number\">{key + 1}</div>\n                    <div className=\"td user-picture\">\n                        <img src={serverUrl + member.userData.picture} alt={member.userData.name} />\n                    </div>\n                    <div className=\"td user-line\">\n                        {member.userData.name} {member.role === \"teacher\" ? <img className=\"teacher-icon\" src=\"/assets/svg/hat.svg\" alt=\"Teacher\" /> : null}\n                    </div>\n                    <div className=\"td role pc-only\">\n                        {member.role} {member.role !== \"admin\" ? <img onClick={() => this.showRoleMenu(key)} className=\"down-icon\" src=\"/assets/svg/down.svg\" alt=\"Select\" /> : null}\n\n                        <div className=\"role-menu\" id={\"roleMenu\" + key}>\n                            {member.role === \"teacher\" ? <React.Fragment><div className=\"line blue\"><img src=\"/assets/svg/check.svg\" alt=\"Check\" /> Teacher</div><div className=\"line\" onClick={() => this.setTeacherToStudent(member.id)}>Student</div></React.Fragment> : <React.Fragment><div className=\"line blue\"><img src=\"/assets/svg/check.svg\" alt=\"Check\" /> Student</div><div className=\"line\" onClick={() => this.setTeacher(member.id)}>Teacher</div></React.Fragment>}\n                        </div>\n                    </div>\n\n                    <div className=\"td rating pc-only\">\n                        {member.totalUserMark}\n                    </div>\n                    <div className=\"td delete pc-only\">\n                        {/* <img src=\"/assets/svg/trash.svg\" alt=\"Delete\" /> */}\n                        {member.role !== \"admin\" ? <img className=\"delete_icon\" src=\"/assets/svg/delete.svg\" alt=\"Delete\" onClick={() => handlePopUpContent(\"deleteMember\", { smallPopUp: true, GroupLink: GroupInfo.link, UserId: member.id })} /> : null}\n                    </div>\n                    <div className=\"td rating more\">\n                    <img className=\"more_icon\" src=\"/assets/svg/more.svg\"  alt=\"More\" onClick={() => handlePopUpContent(\"memberInfo\", {GroupLink: GroupInfo.link, UserId: member.id}) } />\n                    </div>\n                </div>\n            )\n\n\n            return (\n                <React.Fragment>\n                    {UserRole === \"admin\" ? <TopMenu currentGroupLink={GroupLink} isAdmin /> : <TopMenu currentGroupLink={GroupLink} /> }\n\n                    <div className=\"goback_button\" onClick={() => window.history.back()}>\n                        <img className=\"back_icon\" src=\"/assets/svg/back.svg\" alt=\"Back\" />\n                        Go back\n                    </div>\n\n                    <div className=\"alltasks-page action-space admin-lessons\">\n                        <div className=\"page_heading\">Group Members</div>\n                        {TotalMembers ? <div className=\"undone\">Total members: {TotalMembers}</div> : null}\n                        <div className=\"tasks-column-names members-row\">\n                            <span>Number</span>\n                            <span></span>\n                            <span>Full Name</span>\n                            <span>Role</span>\n                            <span>Rating</span>\n                            <span></span>\n                            {/* <div className=\"table_space\"></div>\n                            <span>Action</span> */}\n                        </div>\n                        <div className=\"tasks-column-rows\">\n                            {MembersList ? <AllMembersBlock /> : <p className=\"info_message\">No members yet...</p>}\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <div className=\"grouppage\">\n                    {/* Loading... */}\n                </div>\n            );\n        }\n    }\n}\n\nManageMembersPage.contextType = PopUpContext;","import React, { Component } from 'react';\nimport '../auth/auth.css';\n\nimport AuthService from '../../../../services/auth-service';\n\nclass Restore extends Component {\n\n    state = {\n        AuthService: new AuthService(),\n        showingButton: false,\n        message: null,\n        sMessage: null\n    };\n\n\n    onRestoreFormSubmit = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n        this.state.AuthService.sendFormRequest(formData, '/auth/restore').then(\n            res => {\n                if (res[\"response\"][\"message\"] !== undefined) {\n                    this.setState({\n                        message: res[\"response\"][\"message\"]\n                    });\n                } else{\n                    this.setState({\n                        sMessage: res[\"response\"]\n                    });\n                }\n            }\n        );\n    }\n\n    render() {\n        const { showingButton, message, sMessage } = this.state;\n\n        const buttonStyle = {\n            display: showingButton ? 'block' : 'none'\n        }\n\n        const messageStyle = {\n            display: message ? 'flex' : 'none'\n        }\n\n        const sMessageStyle = { //success message\n            display: sMessage ? 'flex' : 'none'\n        }\n\n        return (\n            <div className=\"auth\">\n                <div className=\"header\">\n                    <img className=\"logo\" src=\"/assets/svg/logo.svg\" alt=\"JetDesk\" />\n                    <a href=\"https://jetdesk.app/\">\n                        <span>JetDesk</span>\n                    </a>\n                </div>\n                <div style={messageStyle} className=\"message\">{message}</div>\n                <div style={sMessageStyle} className=\"message s\">{sMessage}</div>\n                <div className=\"page-content\">\n                    <form id=\"restore\" onSubmit={this.onRestoreFormSubmit}>\n                        <h1>Restore</h1>\n                        <div className=\"input_block_section\">\n                            <span>Email</span>\n                            <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter your email here\" required />\n                        </div>\n                        <div className=\"actions absolute-on-mobile\">\n                            <button type=\"submit\">Restore</button>\n                            <a href=\"/signin\">Go back</a>\n                        </div>\n                    </form>\n                    <img className=\"illustration\" src=\"/assets/illustration/enter.svg\" alt=\"Door\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Restore; ","import React, { Component } from 'react';\nimport '../auth/auth.css';\n\n// import { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\n\nimport AuthService from '../../../../services/auth-service';\n\nclass Password extends Component {\n\n    state = {\n        AuthService: new AuthService(),\n        showingButton: false,\n        userPass: '',\n        message: null,\n        sMessage: null,\n        userToken: null,\n    };\n\n    componentDidMount(){\n        const parsed = queryString.parse(window.location.search);\n        console.log(parsed);\n\n        if(parsed.t !== undefined){\n            this.setState({userToken: parsed.t})\n        } else{\n            window.location = \"/\";\n        }\n    }\n\n    onPasswordFill = (e) => {\n        this.setState({\n            userPass: e.target.value\n        });\n    }\n\n    onPasswordCheck = (e) => {\n        if (e.target.value === this.state.userPass) {\n            this.setState({\n                showingButton: true\n            });\n        }\n    }\n\n    onNewPassFormSubmit = (e) => {\n        e.preventDefault(); // avoid to execute the actual submit of the form.\n        let formData = [];\n        for (let i = 0; i < e.target.length - 1; i++) {\n            formData[e.target[i].name] = e.target[i].value;\n        }\n        this.state.AuthService.sendFormRequest(formData, '/auth/password').then(\n            res => {\n                console.log(res[\"response\"]);\n                if (res[\"response\"][\"code\"] !== undefined) {\n                    this.setState({\n                        sMessage: res[\"response\"][\"message\"]\n                    });\n\n                    function redirectToLogin() {\n                        window.location = \"/signin\";\n                      }\n                      \n                      setTimeout(redirectToLogin, 2000);\n                } else{\n                    this.setState({\n                        message: res[\"response\"][\"message\"]\n                    });\n                }\n            }\n        );\n    }\n\n    render() {\n\n        const { showingButton, message, sMessage, userToken } = this.state;\n\n        const buttonStyle = {\n            display: showingButton ? 'block' : 'none'\n        }\n\n        const messageStyle = {\n            display: message ? 'flex' : 'none'\n        }\n\n        const sMessageStyle = { //success message\n            display: sMessage ? 'flex' : 'none'\n        }\n\n        return (\n            <div className=\"auth\">\n                <div className=\"header\">\n                    <img className=\"logo\" src=\"/assets/svg/logo.svg\" alt=\"JetDesk\" />\n                    <a href=\"https://jetdesk.app/\">\n                        <span>JetDesk</span>\n                    </a>\n                </div>\n                <div style={messageStyle} className=\"message\">{message}</div>\n                <div style={sMessageStyle} className=\"message s\">{sMessage}</div>\n                <div className=\"page-content\">\n                    <form id=\"restore\" onSubmit={this.onNewPassFormSubmit}>\n                        <h1>New Password</h1>\n                        <div className=\"input_block_section\">\n                            <span>Pick a password</span>\n                            <input type=\"password\" onChange={this.onPasswordFill} name=\"password\" id=\"passR\" placeholder=\"Enter your password here\" required />\n                        </div>\n                        <div className=\"input_block_section\">\n                            <span>Repeat password</span>\n                            <input type=\"password\" onChange={this.onPasswordCheck} name=\"password2\" id=\"confirmpassR\" placeholder=\"Repeat your password here\" required />\n                        </div>\n                        <input type=\"hidden\" name=\"userToken\" defaultValue={userToken} />\n                        <div className=\"actions absolute-on-mobile\">\n                        <button type=\"submit\" style={buttonStyle}>Update</button>\n                            {/* <a href=\"/signin\">Go back</a> */}\n                        </div>\n                    </form>\n                    <img className=\"illustration\" src=\"/assets/illustration/enter.svg\" alt=\"Door\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Password; ","import App from './app';\n\nexport default App;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\n\nimport './app.css';\n\n//context\nimport PopUpContext from '../context/popup-context';\n\n//layouts\n// import PopUp from '../popup';\nimport Auth from '../pages/layouts/auth';\nimport SignIn from '../pages/layouts/signin';\nimport SignUp from '../pages/layouts/signup';\nimport DefaultLayout from '../pages/layouts/default';\n\n//pages\nimport HomePage from '../pages/home';\nimport UserProfile from '../pages/user';\nimport GroupPage from '../pages/group';\nimport TaskPage from '../pages/task';\nimport AllTasksPage from '../pages/all-tasks';\nimport GroupSettingsPage from '../pages/admin/group-settings-page';\nimport HomeWorkPage from '../pages/admin/homework-page';\nimport ManageLessonsPage from '../pages/admin/manage-lessons';\nimport JoinClassPage from '../pages/join';\nimport ManageMembersPage from '../pages/admin/manage-members';\nimport Restore from '../pages/layouts/restore/restore';\nimport Password from '../pages/layouts/restore/pass';\n\nexport default class App extends Component {\n\n  state = {\n    isLogedIn: false,\n    token: null,\n    showingPopUp: false,\n    popUpContent: null,\n    errorMessage: null,\n    currentGroupLink: null,\n    // serverUrl: 'http://localhost:5000/',\n    serverUrl: 'https://api.jetdesk.app/',\n  };\n\n\n  componentDidMount() {\n    if (localStorage.getItem('token') !== null) {\n      this.logIn();\n    }\n  }\n\n\n  logOut = () => {\n    localStorage.clear();\n    this.setState({\n      token: null,\n      isLogedIn: false\n    });\n  }\n\n  logIn = () => {\n    this.setState({\n      token: localStorage.getItem('token'),\n      isLogedIn: true\n    });\n  }\n\n  updateErrorMessage = (msg) => {\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  changePopUpState = () => {\n    this.setState({\n      showingPopUp: !this.state.showingPopUp\n    });\n    document.body.style.overflow = 'unset';\n    document.querySelector('body').style.touchAction = \"auto\"; //enable scroll\n  }\n\n  handleTouchMove(e) {\n    e.preventDefault();\n  }\n\n\n  handlePopUpContent = (name, currentGroupLink) => {\n    console.log(\"handlePopUpContent: \" + name);\n\n    if (currentGroupLink === undefined) {\n      currentGroupLink = null;\n    }\n    console.log(\"currentGroupLink: \" + currentGroupLink);\n\n    document.body.style.overflow = 'hidden';\n\n  //   window.addEventListener(\"scroll\", (e) => {\n  //     e.preventDefault();\n  //     window.scrollTo(0, 0);\n  // });\n\n  document.querySelector('body').style.touchAction = \"none\";  //disable scroll\n\n\n    const { showingPopUp, popUpContent } = this.state;\n    if (popUpContent === name) {\n      if (!showingPopUp) {\n        this.setState({ showingPopUp: true, popUpContent: name, currentGroupLink: currentGroupLink });\n      } else {\n        this.setState({ showingPopUp: false, popUpContent: null, currentGroupLink: null });\n      }\n    } else {\n      this.setState({ showingPopUp: true, popUpContent: name, currentGroupLink: currentGroupLink });\n    }\n\n  };\n\n  reformatDate = (dateStr) => {\n    let dArr = dateStr.split(\"-\");  // ex input \"2010-01-18\"\n    // return dArr[2] + \"/\" + dArr[1] + \"/\" + dArr[0].substring(2); //ex out: \"18/01/10\"\n    return dArr[1] + \"/\" + dArr[2] + \"/\" + dArr[0]; //ex out: 04/23/20\n  }\n\n\n  updateCurrentGroupLink = (link) => {\n    console.log(\"updateCurrentGroupLink: \" + link);\n    // if(this.state.currentGroupLink !== link){\n    this.setState({\n      currentGroupLink: link\n    });\n    // } \n  }\n\n\n  render() {\n    const { isLogedIn, showingPopUp, popUpContent, errorMessage, currentGroupLink, serverUrl } = this.state;\n    const { logOut, changePopUpState, handlePopUpContent, updateErrorMessage, updateCurrentGroupLink, reformatDate } = this;\n\n    const PopUpProviderProps = {\n      logOut,\n      showingPopUp,\n      popUpContent,\n      changePopUpState,\n      handlePopUpContent,\n      errorMessage,\n      updateErrorMessage,\n      currentGroupLink,\n      updateCurrentGroupLink,\n      reformatDate,\n      serverUrl,\n    }\n\n\n    function RouteWrapper({\n      component: Component,\n      layout: Layout,\n      ...rest\n    }) {\n      return (\n        <Route {...rest} render={(props) =>\n          <PopUpContext.Provider value={PopUpProviderProps}>\n            <Layout {...props}>\n              <Component {...props} />\n            </Layout>\n            {/* {showingPopUp ? <PopUp /> : null} */}\n          </PopUpContext.Provider>\n        } />\n      );\n    }\n\n\n    {/* <Route path=\"/\" exact>\n              <PopUpContext.Provider value={PopUpProviderProps}>\n                <DefaultLayout>\n                  <HomePage />\n                </DefaultLayout>\n              </PopUpContext.Provider>\n    </Route> */}\n\n    {/* <Route path=\"/class/:link\" render={(props) => <PopUpContext.Provider value={PopUpProviderProps}><DefaultLayout><GroupPage {...props} /> </DefaultLayout></PopUpContext.Provider>} exact></Route> */ }\n\n    if (isLogedIn) {\n      // if(localStorage.getItem('token') !== null){\n      return (\n        <Router>\n          <Switch>\n            <RouteWrapper path=\"/\" exact component={HomePage} layout={DefaultLayout} />\n            <RouteWrapper path=\"/profile\" exact component={UserProfile} layout={DefaultLayout} />\n            <RouteWrapper path=\"/class/:link\" exact component={GroupPage} layout={DefaultLayout} />\n            <RouteWrapper path=\"/task/:link\" exact component={TaskPage} layout={DefaultLayout} />\n            <RouteWrapper path=\"/tasks/:link\" exact component={AllTasksPage} layout={DefaultLayout} />\n            <RouteWrapper path=\"/join/:link\" exact component={JoinClassPage} layout={DefaultLayout} />\n\n            <RouteWrapper path=\"/admin/settings/:link\" exact component={GroupSettingsPage} layout={DefaultLayout} />\n            <RouteWrapper path=\"/admin/homework/:link\" exact component={HomeWorkPage} layout={DefaultLayout} />\n            <RouteWrapper path=\"/admin/manage-lessons/:link\" exact component={ManageLessonsPage} layout={DefaultLayout} />\n            <RouteWrapper path=\"/admin/manage-members/:link\" exact component={ManageMembersPage} layout={DefaultLayout} />\n            <Redirect to=\"/\" />\n            {localStorage.getItem('token') !== null ? <Redirect to=\"/\" /> : null }\n          </Switch>\n        </Router>\n      );\n    } else {\n      return (\n        <Router>\n          <Switch>\n            <Route path=\"/signin\" exact>\n              <SignIn logIn={this.logIn} />\n            </Route>\n            <Route path=\"/signup\" exact>\n              <SignUp logIn={this.logIn} />\n            </Route>\n            <Route path=\"/restore\" exact>\n              <Restore />\n            </Route>\n            <Route path=\"/pass\" exact>\n              <Password />\n            </Route>\n            {localStorage.getItem('token') === null ? <Redirect to=\"/signin\" /> : null }\n            {/* <Redirect to=\"/signin\" /> */}\n          </Switch>\n        </Router>\n      );\n\n      // return <Auth logIn={this.logIn} />\n    }\n\n\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}